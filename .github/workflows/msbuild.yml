name: MSBuild

on: [push, pull_request]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .\Team18\Code18\StartupSPASolution.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with: 
          python-version: '3.7'
      - run: pip install cpplint
      - run: cpplint --recursive --linelength=120 --filter=-legal/copyright,-readability/todo,-runtime/references,-build/include_subdir .

  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Restore NuGet packages
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: nuget restore ${{env.SOLUTION_FILE_PATH}}
        
      - name: Build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        # Add additional options to the MSBuild command line here (like platform or verbosity level).
        # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
        run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

      - name: Setup VSTest path
        uses: darenm/Setup-VSTest@v1

      - name: Run VSTest
        run: vstest.console.exe /Platform:X86 Team18\Code18\Release\IntegrationTesting.dll Team18\Code18\Release\UnitTesting.dll
      
      - name: Run System Test
        working-directory: ${{env.GITHUB_WORKSPACE}}
        uses: actions/setup-python@v4
        with: 
          python-version: '3.7'
        run: python run-autotester.py