procedure proc1{ while ((v40)>((v93))) {
    v48 = (v41)+v68;
    v4 = (v24/v54);
    while ((!(21==v95))&&((!(v46!=v73%v59))&&(v99==v91))) {
      v47 = v10;
      v2 = v96;
      v7 = (97);
    } v32 = 8;
    v5 = (((v21)))%v1;
    v32 = ((v6+v80-v85));
    call proc9;
    v66 = v18+v17*v91%30;
    v80 = (v93/((v4)))%v69*(v66);
    print v68;
  } v85 = v67;
  while (((!((v82)-(v1)-v97+(v60)==((89/v64%v62%v54+v30))))&&((((v54))<=v88)||((v21)-v52%v19+(v95)/(v71*v85/29)<=v2%3*(v28))))||(((v98)*(v86))>=59+(v98)-v52)) {
    v60 = (v69-v27);
    read v69;
    v34 = v83;
    while ((((v40))>=(v46+v38%v92)+v13-(v71)-v96)&&(!((v46-v24)*v4>=v20*v64-v43+(v48)+v19-v100*((v80)/v80)))) {
      while ((((v33*v55%v84)))%v9!=(((v88)))) {
        v48 = (((v81)));
      } v51 = v65;
      v66 = ((((v13)/v37)));
    } v30 = (v4);
    v28 = (v96);
    v70 = (v5);
    v18 = (v88);
    v38 = v42;
    v67 = v5+(v3);
  } v94 = ((v58));
  v50 = v10*(v27)*13*v57%v75/v21-v58+(30-v68*v72);
  v51 = v59;
  v49 = ((v1));
  v52 = v75*v4-(((v83)))+v87;
  print v66;
  v72 = v47/66-v6/((v70));
  v31 = ((46));
  v6 = v29;
  v15 = 32;
  call proc7;
  v75 = (((v74))+v83-v17);
  if ((!(v25%v81*80<=(v73)))||(((!(v69%v54*(v50)!=v22+(v93)*v83-34*((v42%v62/v13))))||((((!((v74)>v77*v36+v31+v80%v21+v87+(v94)*v80))&&(!(((v60+v35/68/v4))==((v59)/v30))))&&(v29<=(v92+v55)))||((97)>v62+v81)))&&(!(v39<((v30)))))) then {
    v27 = (v64);
    v24 = (v88);
    while (((((v65)))<=v41+(v34)%(((22))))&&(!((v1)%23%v67%v73%v38<=v42%v33/v12))) {
      v28 = (56);
      v25 = (v59);
      v95 = (((v39)));
    } print v29;
    v74 = v33;
    v21 = (v83%(v87-v93)/((v9)*v3/84)/v100)*v1;
    v99 = v20;
    if (((!((((v70)))==v14))&&((((((v37))<=(v17))||(((v100*v85)/61)<v83/24%((v20))))||(((v1*1)+(98))>=((v81*v96))))&&(((v95)*v4%59<(90))||(v98>v25))))&&(!((v76)>v63))) then {
      v41 = ((v83)/101);
      while (((((v16)!=(v88/((21%v11)))%((v29)/v62))||((v60)>(v70-v4)))&&(!(((v28*v47))-(v54)-(v34)>=((v77))%53)))&&((!(((v45))==(v38)))&&((69*v72%11)-v14==(v80)))) {
        v69 = v11%v5+v51;
        v49 = ((v97/v50)/(v18+v54%v27));
        v62 = ((82));
      } v49 = v74*v7;
    } else { call proc6;
    } v84 = (v97+(v59-v44));
    print v101;
  } else { call proc10;
    v57 = v5/v67/v28-(v100);
    v82 = (v99);
    v26 = v83;
    v77 = v75/v67;
  } v3 = (v16);
  v11 = ((v91));
  v91 = (((v24/v36)))+((((v88%v65))));
  while ((v52>(50))||((v32)/v87<=v90/68%(v7))) {
    v23 = (v53);
    read v39;
    call proc4;
    print v6;
    v65 = ((v17));
    v31 = 7;
    v90 = (((v97)));
    v43 = 83%v4*v99+63-(v40-v20);
    call proc3;
    v1 = 76;
  } print v12;
  v22 = (v93);
  v44 = v27-v87-v66-v35%(v50)-v66+((v34)*49)+v5;
  if (((((v20)>=((73/v57))-v2/((v59)-v99-v77)*v91+37-(v97%88))||(!((v93)<=v6)))&&(v60/(v61)/(v88)!=(v75+v50*v39)))&&((((!(v29+(v58)==(v10)%(v11)*v25))&&((v2%v2/v18<=(v8)*v17-v25/v48+15)&&(!((v41)<v25+24))))&&(v40<=v100/v81))||((v18==1*v12-((v53/31+v45)))&&(23*(v5)-(v19)!=(v37%33))))) then {
    call proc7;
    v44 = 9;
    v99 = (v98);
    while ((v31-(v84%v92))-v37==v77/v34+(((v98)))/10*43) {
      print v31;
      v55 = 68;
      v83 = v77/36;
    } read v75;
    v7 = (((v90)));
    v88 = (v81/v24)%v39;
    read v35;
    while ((!((v43)>=v47%(v52)*v28))||(!(v32-(v32)<(v5)))) {
      print v75;
      v46 = v74;
      v33 = v51+(94);
    } v29 = v48*((v22%v64));
  } else { v38 = (v31);
    v59 = v53;
    v24 = 59;
    if ((((((v75))/v7*v33)<v87+v44*(v1)-v70+v77%69+v60*(v71)/(v11))||((((!((v9-86)<((v22)-65/33-v55*v32-v91+v15%v82*24*v85-v69)))||(((6)==61)||(!((v13/v57*32%v3+v35)==(80)))))||((!(v35>=(v33)))&&(v6+v12/(((v17))/v25)>=v91)))||(((!(v17/v46/(v47)%v84==v12))&&(!(v33>=v17*21+v44)))||(!(v46*v59/v10>(v47))))))||(((v16-(((v47)-v94)%((34*(v3)-v15)))>(v4)+v10/(v93*v93)-51%67)&&((v97+(88)-v97*(v52))!=((v6%30)/v91/(((v34))))))||(((!(v31*30/(((v66%v79))%(v52*v55))==v30))||(!(((39)/((v61))+v69)>=(v37+v31))))||(!(v46/(10-((v28)))<(v7*v91/(v94))))))) then {
      v81 = v24;
      call proc9;
      v57 = (v47*v92);
    } else {  v74 = ((v79)+v23)-(12);
    } v57 = v28;
  } v35 = (93%v95);
  v40 = v93;
  call proc10;
  read v50;
  v11 = ((v75%v47))/v49+50;
  v72 = ((v91%(v3)));
  v91 = (v56+(v63))%v101;
  if ((((v25==v7)&&(v60/v53/v12+(v3)/(v3)<v73))||((((!(v3<=(v39)+(v67)-(74)%v89%v83))&&((16*v43+94*(v49))>36))&&(v88%v86*v41-69%v61<=((v73))))||(((!(v6!=((v44))/v47-v96))&&((v18)!=((v81*v37))))||(!((58)<=(v101)%v84%(53))))))||((((!((v16+(v56))-((v12))<((54))-v58*v11%v8))&&((v9-17)!=v75*62*v82+(((v101)))))||(!(v91/v88==v80)))&&(!(v16*(v33)==v42/v11+v56)))) then {
    v88 = (v89)-(v69);
    while ((v4+(v98)*(v98)+17>v90)||((!((v37)-v88>=v48))&&((!(v90-(v94)>=(27/95/v58-70)%(8)*v38%v74+v80+v6))||(!((((v71))%87%v8)<(v46-v33+(5))/(v79*(v4))*(v17/v48)+80%v77))))) {
      v97 = ((v98)%v50/(v96-v48*v34)-v23)-v74;
      v96 = (v43)*v88;
      call proc8;
    } read v72;
    read v52;
    v1 = ((v1));
    while (((!(v8/((v58))/(v45)%v76+v71+v11>v34))&&((v10)==(((99)))%v73*(v24)/92*(4)))||((((!(((((v12/v53))%v13))>=v46/v57%v77))&&(!(55*v58%v77%((v68)+v81*v75)<=v67/29-v10-v94-10*((v62))+(v25))))&&(!((v7)<(v19%43))))&&((!((v41)==v50%v74%v5-38))&&((v51>(v13))&&(!((v69-v71/(v60)*v31)>(v63))))))) {
      v46 = v22-v27+v84%v93*v25/v97-v76-9;
      v73 = ((6));
      v55 = (v45/v95);
    } v56 = 36/v56%57*((35));
    v53 = (v58);
    while ((!((v47)-(v18)==((43/(v96)/v32))))&&(((((80-v84%73*v78)+v20-81==v28+(v46))&&((!(v37*v39==(38)-(v30)*v56))||((!((v96)-v86<=v64%((v46))))||(v9>14*v78+(v17)))))&&((v75<=v47+v71-v49)&&((v63)+v73/v47+v52-((v72))>=(((v81))))))&&((!(v57<=(v62)))||(!(v12<(v68%23)))))) {
      v66 = (39/(v67)-(v54))+v79+v1;
      v94 = (v19)-v39;
      v82 = v40+v10;
    } v76 = 42;
  } else { if (!((v11/(v8-v5))<v83)) then {
      v71 = v82;
      call proc10;
      v81 = ((v65)%v90/(5));
    } else { v70 = (v57-(v75))%30+(v9);
    } v101 = (v81);
    if ((((((v76-v24%87)>=((((23%63*v60%(v64)%v93)))))&&(!(v99%v100>=v32-v84)))&&(v33>=95%v17+v83-1-22))||((!((v93+90-v33/(65)*v42%v7)-(52)==v3-v68))||(((!((((v97)))>=v50))||((v51+v81-v37/v42>v16)&&(!(((v69)%(v89))<v94%((v15))))))&&(!((51%v72)+(v22+v31/77)>23%v3+(v89/v41)*(v29)/33)))))||((v10<=((v1)))||((!(v39==(v50/(v21)+v40*v89)))||(!(v11!=v76))))) then {
      v101 = ((83));
      v48 = ((v2));
      v91 = v26;
    } else { v76 = ((((39))));
    } v79 = ((v94)-v98);
    v38 = 6;
  } v90 = ((v81));
  while (((((v81<=(v31)-((v91))+v4)||(!(v15<v79)))&&((((v44)==((v48)%(v6))*(v34))&&(!((v70)*v45-(v68)*(17)<v10)))||(((v88)>60/(v10))&&(!(v71<((v77)))))))||(((!(v52-v73%(v5)>=61))||(((v72/v95+v83-(v53))<=((v40)))||((!(((v91))*(v59)>=((v58))))&&(v18!=(((v12)/v11/v27-v31))))))||(!(v65>43%(v101)-((v52))))))&&((!((v12*(75-v32))!=20-((v49))))&&(!(((v6/60-v33))!=v35)))) {
    v64 = v83/((v58))%v84;
    v29 = v64;
    v81 = (v81*(v80)+v28);
    v84 = 43%((v66)%v12)-((v30/v95))%84;
    v101 = ((v63));
    read v20;
    v21 = (100);
    v63 = (v85);
    v55 = (v98)+31+v56-v76+v11-v13/v91;
    call proc4;
  } call proc4;
  while ((((v11)-v40-v6<=(v81+v95))&&((v65<=(v49))&&(((v80))<=((v82/(v33))))))||((v47)<=(97%18))) {
    v78 = (((v101)));
    read v1;
    v60 = (v38)*((v35))*v100*v24/v28;
    read v66;
    v73 = v42;
    v99 = (((v81)));
    call proc6;
    if (!((v68-v67)%v86<=((v54)-(v1))%97*(v17/v16/101-v88/v73-3+v48))) then {
      while ((((v9%63/v75)==((v16)))||(((v44)>=(v61))||(!(v1%v81/v62*(v42)<(98)*v66%v5/v101-(v4)))))||(!(v58>v70))) {
        read v3;
        v86 = (v65%v12-54);
        v20 = (v98);
      } v29 = v46;
      v15 = ((88));
    } else { if (((!(v65==(v70)/(((v21)))))||((!((((6)))>v36/v31/v56%99/v33*v54*v91*81%10-v60))&&((((v73-(v79)))<=(v26/v16))&&((((v13))>((v47))*v9%(v26)+v36)&&(!(((v22+v17))!=v100*v74))))))||((!((((v4)*(((v36)))))*v77/(v1)>18))||(!(89!=((v80))%v97)))) then {
        v27 = v38;
      } else { print v29; }
    } v33 = (v28+57%v69%v51);
    while (((v63)/(v4)-v13!=(28))&&(((!(v97==(v54)))||((((65-23)))<v79/(v52)))||(!((100%v83)*(v82)!=(v98))))) {
      v58 = ((v11))*(v40)-((21));
      v60 = v52;
      v20 = (v4);
    } } v7 = 22-v63-v18%v89;
  v10 = v2;
  while (!(v48>v74*v20)) {
    v48 = v54*v77;
    v29 = v9;
    call proc9;
    v27 = ((v47));
    v76 = 66+(v4);
    while (((((v74<v38)||((v55)>v78))&&(((v39)>v29*v73-v82+35/v42*v22-v32)&&(!((((7))*v32)<(v70/(44))%(((v27)))-v14-86%(v50)))))&&(!(((37))*((v74))%v4*v91!=v42+(v10)+v68)))&&(((!(v14+27>=(v11)))||((!((v96)<=(v28)+v32%v75%v53*v16))&&(!(v68+23-v24>(v34)%v65))))||(!(((v38))!=v47)))) {
      v97 = v1/v2;
      v81 = (((51/79)/v7));
      v14 = (v68);
    } v55 = (v83*((v91)+v52));
    v4 = 30%v34+(v71);
    v58 = v37;
    print v31;
  } v8 = v17;
} procedure proc2{ v77 = (v4);
  call proc6;
  v43 = v32;
  print v75;
  v91 = v20-(v84-v32*(v57)%v55);
  print v56;
  v27 = ((v79))/(v45)-(v35);
  v31 = (84)-24+((85))%v85%69*(v96);
  v31 = (((v23)/v56*(v33))+v45*82-v10);
  v86 = (v19);
  v64 = v15;
  call proc6;
  print v25;
  read v90;
  v4 = (v99*v55);
  v47 = (25);
  call proc10;
  v75 = v19;
  print v88;
  v2 = v21*v49-79;
  v53 = ((v54%v32/12/v18));
  v95 = (v66+v56+35);
  while ((!(5>=(v10)%v7%v4))&&(((((((!((v75)>v9))||(((v88%v47*v60-v53)*25!=v58%v94)||(((((v30))))/v70<=100*(v14)-29)))||(!(((((v34)*v91%v33)))*((v75))%79-(v13)>((v61)))))||(!(v2>(((v47))))))||((18)==v7))||(v23%40<v53))&&(!(v56!=(v38))))) {
    v96 = (v87)%(v41);
    print v40;
    v41 = (v5/v68);
    v51 = v41%(v94-8);
    while (((!((((44)/67))*v31<v90))&&(v23-v69==v18))||(!((((v45+21))/v20)<((v33))))) {
      if ((((v101<67+(43/56))||(!(((v25%(v68)%(v45)%(100)))>=(v79)%v97)))||(((!((v46%v32)%43>=v51%v30+v61+v73))&&(((((76)-20+65<v87)||(((((31))))<=(v29)%v61-v35))||(!(v100/v58>=(v98))))||((!(((90))<(v78)))&&(((v70))>=(v78)))))&&(((((v63)+v93))==v50*v35*(v53)-v57-v8)||(((v2)%v75==39-v15-v6)&&(((23)+v9)<v96)))))||((96/v88*v21<((62%v98)))&&((16==((v12+v2)))&&(((!((v90)+v54<(v93*(85))))&&(!((92)+(v42)!=v91/(v73)*v16-(v28)*v78%v22/(v22)+((v40)))))&&(((v76)-v78)<=((v93))+v18+(v74)))))) then {
        v31 = v3%(v1);
        read v97;
        v87 = v85;
      } else { v60 = (v99);
      } print v81;
      v96 = (v75);
    } v62 = v85*v6;
    if ((((((v5-v91<=99%v65+(53%50))&&(v71-v78/v40%(71)-((v41)/((v19)))<v43/v39))&&((!((((v70)+v23%v79))!=v97*((v95))))&&(((v4*v63))==(v88)-(95))))||((v101==v64)&&(!((v27)==(v85/v7)))))||((!(((v47))<(v74)-v101*((82))+v8%(((v4))*(21))))&&(!(v55/v13-v88*(v87)>(v92+43*v16)))))||(((v42<(v29)/v92-(51))||(((v23-(v83))*v63)>=100))&&(!(v65<(((v63%(v86)+(v28)))))))) then {
      v64 = v13;
      v43 = v75;
      v72 = v42;
    } else { v35 = (27+v36);
    } v28 = ((((v71/v34))));
    while (!((v79)==67+v75*26+v62)) {
      v65 = v76;
      v63 = v53;
      v78 = ((((v95))/((v93))));
    } v41 = ((v49%v2))-(v54)+v100;
  } v31 = v14%(76);
  v20 = (v20);
  print v65;
  read v47;
  read v63;
  call proc4;
  v40 = (77)-v55%((v44));
  v91 = v32;
  v97 = v38+17;
  read v19;
  v79 = (76);
  v37 = v42-(4*v15)-v12-((v96))-v30;
  v72 = (v86);
  call proc8;
  call proc4;
  v9 = (v99-v63)%(v45*v45);
  v85 = (((v12/v39))/v67/v34%v77);
} procedure proc3{ v15 = v66%v17;
  v81 = v7;
  v37 = (v3)/87/(v66);
  v87 = (v74)%v89+v31-v41-v59-v85;
  v18 = (((((v20)))));
  v49 = (v52)/68;
  while ((((!(v79*v17<=v56))||(((65))<v72%v45/((49-v7))))&&((!(v78!=v10))||(v99*64*v97/76!=(v86))))||(!((v85)/60+(v26)>=(v18)/v80))) {
    read v72;
    v91 = 53;
    v9 = v4;
    v76 = v49;
    v8 = ((82))-((v76)%v2)%v26;
    if (((!(((v42)/(v101+(v55)))<(v50)))&&(!((v10)==v42/94)))||((((!(v36%v82%37<=v48))&&(((((v48))*v72*v73)>=(v98))||(!((((v79*(v86/v50)))*24%v30*v93)*((v54))>(v31)+v51))))||(v10*v18-v78%v18*v76*v24%13!=v98*v12*v21/v5-((((v89))))))||(v96>=(v78)))) then {
      v28 = ((49%v41)%v4*2);
      call proc6;
      read v17;
    } else { if (12==(45)) then {
        v28 = (v97/v25%v84)%96;
      } else { v84 = v53; }
    } v8 = (v82);
    while (!((((v95)))<=((v80/v9*67)))) {
      v70 = 100*22;
      v63 = (v96*v20%(v92)%(v41))-(v29);
      v17 = v93;
    } v42 = (v50-v77);
    v63 = 61;
  } read v55;
  v81 = v100;
  read v46;
  v68 = ((65));
  call proc9;
  v88 = v40/v39;
  v48 = (v73%60*v68+v63);
  print v71;
  v93 = v58+v37/(v20/89);
  print v13;
  v66 = ((v73)+v55);
  v30 = v77;
  v57 = (v5+v20);
  v86 = (87)*v81+15/93/v46*v61+v8*(v86)-(64);
  v88 = (v79+(v74))*v50+v88;
  v57 = ((v57%v90-(v72))*((v56)));
  v73 = v12/((v13))+53;
  while ((v23<=(v38+v13/v63*v3%v100))||(!((v31)>(v59)-v38+v30))) {
    v64 = (v33+96);
    v39 = v44;
    v30 = 77*(v11)-v42-v10/v35/v49/v3-(((v72)));
    v37 = (v50/74+v87);
    v59 = ((v13))+82%(60/(v54));
    v65 = v92-((v79))%v64-(v31);
    v88 = ((v32));
    v93 = ((v5));
    v77 = (v21);
    v23 = (v81)+((91));
  } v10 = (v53)+v20-v87+v28-16/v22/v31;
  v91 = v6;
  v46 = (((v81)+v95)-v59/(v20)-v68);
  v47 = (v2);
  v98 = v100;
  call proc8;
  v17 = (29+v55);
  v33 = (v40)+v43-((v70))*(v50)+(v57);
  print v16;
  call proc9;
  v100 = (v57*(v21)+(95)/93);
  v3 = (((v38)));
  read v7;
  v17 = v17;
  v63 = (76);
} procedure proc4{ v83 = (v41)*(v97+v94);
  v53 = ((v11))*v95;
  v3 = 7%(v49)/(v9)*(v65);
  read v94;
  read v15;
  v16 = (((68)));
  v7 = (v52/56);
  read v86;
  v101 = v88%v67/(1)*v82%v52/v85;
  v43 = (16)+(v49-(v91+v5));
  while (((((((v2)))<(v62/v54)*v57)&&(!(v75>54-v6*v29)))&&((v76/61-v50/v11-(v49/60))!=(v52)*v76%(v81)))||((((v70>=((50)))||((v27+(2-13)+77/(v13)-(v82)==(v4)-v35%(v81))||(v25<=(v44)+v30)))&&(!(v93<=v50+(v20)-(v5))))&&((((2%81+v94)>=(v81/v65%(69+v49)-v26))||((v57>=((74))-38-v85-v79)&&(v33<=v98)))&&((((55+v90+v89%v13))%(v62)==v72+v28)||(!((v86/v85)>=v10%v63-v51-v10-35%v30)))))) {
    if ((!((v98)-v81%v96>(v29)/v21))||((((v49-(45)>=v41/v95)||((v90)!=v14%((v17))+((v71))))&&((v65-v34<=v96+v60)&&((v20)<=(v61+(v31)+(v28)%65))))&&((!(((v54/(v38))%v99/((50))*v6%v19)>=((v57))-(v53*(v78*v7/42))))||((v42%84<=(((86*((v80)))))%(v21)+v46-v77)||((v88)%v68%v52<=v79%v76))))) then {
      v97 = (v33/74%v67);
      v2 = (v68%((13)));
      v46 = (12)%(74);
    } else { v58 = (v88);
    } print v38;
    v99 = v37;
    v68 = (v85);
    while (((v24+v67))<=v82+(v27)+(66)%(v44)-(v34)) {
      v31 = 91-((v81-(v17)));
      v71 = (v57*v76);
      v37 = (((v99)));
    } while (((!(v17/(v34)%v87==v75*v18))&&(!(v54>=v90+v75+(v5))))||((((((((8*(v40))/v77>(v45))&&(!((v41+v58%v78*(v63)+v80)!=v18)))&&(!(((v51))>(((v83))))))&&(!((v100)<(v63)/(v72)*v48+(v77/v23+v47))))&&(!((v94)+(v96%(v36))>((v13)*v16))))&&(!((5+v37/v36)==v67/((v51/v48)))))&&((((!(v33*v22!=(9%v21+83/v15-((v70))-(v48*v93))))||(v64/v80<=v3%(v41)-(v94)))&&(v31>(v66)/v100-((92))))||(!(((((v91))))>=v41))))) {
      v31 = v78;
      v28 = (v13-v56);
      call proc3;
    } if (((!((v80+61+v74+((v96)))<(v64)))&&(((v55>v81%v30/((v68+v18)))||(!(v98-v79==v16+v41)))||((((v43))<v8/(47)+v56+v45+v33)&&((v93)*v28+v32==(v96)/((((v9)))/((32)))))))||((((v48)<v13%v38*(v94))||(((v43)!=12)||(v54>((((v23)))))))&&((!(v85-(86/(82))>=(v9)))&&((98>(13-v41-(v56))*v12-v9)&&(!((((v46)-(v14)%v24))+(v73)<=75/80)))))) then {
      v93 = v47+v50+v62+v77;
      v32 = ((v30%(((v67)))));
      v4 = (((v30)));
    } else { v52 = v10*v91*v7-v92/v72;
    } while ((((!((v26-v101%v65/v43+v7+v17)==v42/8-v74))&&(((v12))<=v27))||(((48)>v77-(v97)/81%v28)||(((((v25)))<(v42))&&(!(v64*v34>=((v47)))))))||(((((v18)*(v50%(12)/98)<((v85%88)))&&(!((v16%77)<=(v66))))||(!((v45)>((v2)))))&&(((v67==((v20)))&&(!(v40%100+((v52))-(v64*v90)<((v34)+v72+(64)%v69))))||(((((v2))==((v27))-v61)&&((!(v45+(v50-v89)<=(v86)*v56*v27))||(!(v25*(v15)%42%(v59)==(v50+v14*v12-v42)))))||(26<57))))) {
      read v34;
      v27 = 24;
      v61 = v4;
    } v29 = (35)+v32+v9%v77/(v23);
    print v21;
  } print v72;
  v82 = ((((v80-v62%v20))));
  v42 = (v60)/(50);
  read v94;
  if ((((!(v23*(v72)==((v92*91))%(v74)))&&(((v29)*(v35-57%v68)+(47)>=v90/v3%11-v62)||(!(63>(v88)))))||(((v16-(v76)%v22+v75*32<27)&&(!(v42!=(77))))||((29)/(v63)<=v64-v67*v50%v71%v12/(v43))))&&(8-v100/v25-v72!=(v20%v18)*(v48))) then {
    while ((!(v65-(v93-v9)>=(23-88)/v48))&&((!((v53)==(v76)))&&((((!(v48-(77)<=v57))&&((v93)!=(72-v39)))&&(((28)-v71/v32!=v91)||(!((v96)!=(v40/v34+v4)))))&&(!((((((v70)))-(v24))+v10)!=v71))))) {
      read v80;
      v61 = (v62%v70);
      v101 = ((v3));
    } while (((!(((v43))<=(v84)))&&(v61+39*v9%89*v2/v41*v56==11))||(((100-v28/((v21))*(v2))==v55+v9-v88-3/v8)||(!(((v71)-77)>=v11+v100*v95/(v20))))) {
      read v28;
      v67 = (((v81)));
      v19 = (v44)%v19;
    } v33 = v54/((v66)%v9);
    v14 = 9%v61+v31/v35/57%(v47)+v86;
    v56 = v32;
    v33 = v67;
    v54 = (v98)+5;
    while ((((32+v98)/(75)>=(((v96))))||(((!(84+20>(1/76%v95)))||(((v70!=(v48))&&(!(v92!=v54)))||(((!(v101<=99))||((!((24)<v59*((v99)%((90)))))||(v33%v88*v1+v13+v46<(v11))))&&((v49)!=69/v29-v73-19-((18))))))&&(v4<62)))||((v73)==v62-v57-(v56))) {
      v8 = (v19);
      print v50;
      v89 = 10+v74%v14*v8;
    } v83 = v39-60;
    v65 = v75+((41))*88%v38*v91*v10;
  } else { v16 = (((17/v70)*v89));
    while ((((v55)/v72)/v59*v46>=(((76)))-(((v78)/v33)))&&((v87)!=(v81+(v32%v22)))) {
      print v18;
      v90 = (v18)/(19)%v12;
      v43 = (v98);
    } v37 = (((v8*v53)));
    v78 = v80/v11/(v7)/(((v20)))-v36/v96;
    if ((((!(v95<((v48))))||((v1<v85/7*(v20)*((94)))&&(((((v1))<v66%v31)&&((!((v16/(43+48)/v33)/v93!=v82/42))&&((!(31/(v82)%v85>=((v61))/v20+v53*v6))||(v28+54<=v30+(v3)-v11%53*(((v4)))))))||((v75)>v58%v42-14/v93))))&&((21)<=(((v52+49+v65)))))||(((v58)*(v73)<v38)||((!(v81<96))||(!(v92<(((v48)*v34)-v91)))))) then {
      v62 = (v49);
      read v94;
      v59 = v20+66;
    } else { v20 = ((v40)); }
  } v33 = v56;
  v10 = 58+v54+(v52)+61;
  v86 = v90;
  v30 = 41;
  v17 = v30-(v58);
  v2 = v82;
  while (!((v78)+(v53)/v93*67-v49/v32*72+(v99)/(v99-v99)<((28)))) {
    v27 = v35;
    v46 = (v73);
    v55 = v27;
    v23 = ((v90))/73;
    while ((((!(v77==v48))||(!((v6%v99*(v15))>=((v86-33%62*v94)))))||((!((42-v59-(v57))==v87*v82+v70*v55))||(((v55))>(v83))))&&(((((v34))))/v100>=(((v33))))) {
      if ((v44/92%45%v43%42-(v61-(v6)%(v100))>=((v56)))&&((v45%v27>v90/15%v93)&&((v79)<13))) then {
        v51 = (((65)/v59));
        call proc3;
        v6 = (v50);
      } else { v18 = (v75);
      } v46 = ((v23))/v65;
      while (((((v43-v60!=v98-(v100))||(v71!=(v63+v26)))&&(v53<=((v101))))&&((v54<=(v15/v45))&&((!(v44*v58-v34+v41-v52>=84+(v7)*(v44%v20)))&&((!(((v49)%v35*(v7%v100/v2/v38/v93)*((v11)-v31))>(v28)))||(((!((v16*v40)%v51*(v58)==(70-v73)))||(((v21)%((v2)))==(((((77)/v49)))*v82)))&&(67%v32/(v44)-v80+v55/((((89))))!=((v62))*v1))))))&&((!((v70/v21%v65%v52%v71*v48)<v59))&&((!(v23*((v15))*v65>v51))||(!(((v77))!=((55))))))) {
        v62 = v82-v1/v49; }
    } v56 = (97);
    v53 = ((v44));
    v28 = ((v92+(v20)+v6))+(v66);
    v6 = (30)/(v59)-v68;
    v27 = 86%(v64)%v68;
  } print v96;
  v39 = (((v3-20)))%v96+v100;
  v82 = (v58);
  v64 = v83/(v99%v83)*v31;
  v51 = (((v54)*v80))-(v3);
  if ((v3%v20<=(v54)-v11)||((v18<=84-v46*(6)*v52+(v6))||((((!(v43*v76-(v33)>(v16)))||(v79%v7%9%v39/14!=v20*v14/v1))||((1)>((((v86)%v82-v38))+v37)))||(!((66*v76/(v16*v92))/v80<=v86%(v75)))))) then {
    while (((v63))==13) {
      call proc8;
      v2 = (v21);
      v95 = v50;
    } v53 = ((v18-v27*42/66)/v23);
    print v3;
    v28 = 35+v18*((v44)+v61);
    print v66;
    while (((((!((v18)<=v23))&&((!((v12%v25/v37)<((v26))))||(!((v78-v55)-v26!=v101/v56+42%(41)/v71/v60))))||(!(((v72/v28)/(v49))>=(v95))))||(((((!((v45)*(v30)*(v38)<v82%v90/54*v97-v67*(v38)))&&(((v10))%(v6)!=v59-v70/95/v32+v69))||(!((v27%v4)==v78+(v28))))||(((!(v78*v27<21))&&(!(v94*(v39/v24)==(v84%(v56)/v89))))&&(((((v31))%v97+37))>=(20))))||((v38/(v14*v89%v66)>((((40))))+((v45%(v83)+v15+v63+v84)))||((((v88)*v88%(v71))!=(v35-(v87))/(v19)+(v85%v32))||(((!((v18+v81)<=v47+v54/v100*((((v66))))))&&(!(v16<=v58/(v100)%((v80))+57*v41+v19%37*79)))&&(v54>((v77))))))))&&(((v2))+18+((v84))<v65-22%(39))) {
      v90 = (v78);
      v92 = v77*v80%(78)-(78);
      while ((((v80-37>=((v43)))||(((v30)*((72)-89/v60)>v67)&&(((v84*v11==((100)-((v27/v27))/(101-v32)%v20))||(!(v6-25/v57/v67/v94<v23)))||(!((22)+23<=((v44)))))))&&(!((v47)+v99!=(v91)-(v90%v5-101))))&&((!(((v47))==v86))&&((v64-v14/v46*(v35))>=v31*16))) {
        v54 = (v84/v55)/93; }
    } v27 = (25);
    v35 = v27;
    v17 = v39-22;
    print v27;
  } else { v17 = (27);
    v8 = ((((v34))));
    v88 = (((v87)));
    v38 = (v63);
    v44 = v81+42+v82;
  } v36 = (81)%(v47%21+(v39-v38-v40-(v65)));
  while (!((v4)==v53)) {
    v97 = (((v42)));
    v78 = (v36/v46)+(v6-v14);
    while ((((!(v7/(93)%7<v20))||((!((29)<(35)))||((((v59))>=v6%(v52)%(v61)+v20)||(((v31*(v45))-v27)!=(((((v17*v56)))))))))&&(((v36+(v2)!=v20-6-v94)||(v59-(v58%v23)!=(v31)))||((v7<v82)||(v48*v87+v51*v69>(92)))))||((!(v42*v19>=v85*v37%38))||(!(((v39))<v42+(v16+v47))))) {
      v69 = (73)/(9);
      v27 = (v14);
      v97 = ((30));
    } if ((v21==v101)&&((((((82))))<((v60/v14)))||(!((((v34)))<=(v35)/v27/v64-v51)))) then {
      v80 = (93);
      v92 = (v73);
      v21 = 14;
    } else {  v85 = v88/(v100)%58-v98*v89+v66;
    } v100 = v44;
    v85 = 70;
    while (((v101<=(27))&&((((((v62)%16-(v1))<(v14%v58-(63)%v33)/v48)||((v30)==(33+v25)))||(v15+(v24)%v83%v22*v79==(7)))||(!((v31)>=v36))))&&(((!(v34!=v8))||((v95+(v59)==v42-v39-v21-(v75/v23))&&((!((v101/100+v8)<(v80)))&&(!((((45)))>(15))))))&&((v66+(96)-(v14-v78%34)<=32+v24%v40)||((((((v64)%v43+v91)+v52-v93<=(v87))||((v11)/(v19)-v88*((v50))*((9)+17)>v26/57+v84%(v54)))||(((!(v28-v81-(4+v48*v89%v16)+v42*v56/v14%v73==80/v1))||(!(((v48/v49)/((7)))<=(v54/87/v83-v23-v19))))&&(!(v4+(v84)/41<=v39))))&&(!(v11==v68)))))) {
      while (((v64)%16+(v30+v46)*99*(v49)/47==v13)||(!(v48<(v68)%(v26)))) {
        v74 = v48;
      } v52 = (v25-v36+v29/v61-79/v25/v77/66/89/((v20)));
      v93 = (20%v75-15%v7);
    } v65 = (v94)%(v23-v88-(88));
    v59 = (v70/(v20));
    v92 = v13;
  } read v46;
  v20 = (v94)*v65-v94*(v53*v30)-v51;
  v65 = (v90)-v76+((8)+(85))-v62;
  v85 = v25%v35%(v95)*v24+22;
  v74 = 99%v22;
  v78 = (v24);
  v28 = (v46%(v89));
  if (((((!(v100==(v86)))||(v38%((50%v100))<=(v37)-((84))+v67-v32+v50/35/(v15*v78+v88)))||((!((v6*(v60)+v69)<=(((17)))))||(((!(((v92))==((35*v49)/97-v10-v2/v83-v1+v41)))||(!(v30>v95)))||(v29>38))))||(!(v5>=(v45))))||((((!(((51))-v69-v1*v58+v10%v11>=93%v48))&&(v39>=(v72)))&&(v66*(v34)<=66+(v46)))&&(!((v3)<=v69)))) then {
    v64 = (((v31)));
    v58 = v30+((v62))-45-v44%v17;
    v68 = v95*(v64);
    v97 = (v92);
    while (((((!(45+v3*(v93)>=(v82)))&&((!(v21*98%27<=80))||((2+(v60))-(15)<69-30)))||(v54+v59<=v21))||(v63!=v79*v18*v54+((v31))))||((!(v44<v62))||(((51)>((v85))+v71)&&((v94)<((v79)))))) {
      v101 = v19;
      v95 = ((((v45-v30))))*v55/(v65);
      read v16;
    } v40 = v46*v16;
    print v18;
    while (!((v77)==23-v72)) {
      call proc5;
      v11 = ((((v2)))+v26+90);
      v40 = v90%84;
    } v63 = (v42*v98)+v91%19*(v65);
    print v28;
  } else { v12 = (v86);
    v88 = (v84);
    v43 = v6+66;
    v57 = v64;
    while ((!(((v28))>v51-(29-((v65)))))||(((((v64-49%(v85+78)))))<v5*v15+v38)) {
      v5 = ((v84+v80*v85))-v91+(v100+v44+v78);
      v6 = 52;
      if (((!((v93)>=79/v56-v65/v8))&&(!(v88>(v88%v71))))&&(!((v33*v69)%v41%((v19)-v61)-v82*84%66+v54%(v60)>(21)))) then {
        v85 = (v97)%v6*v72%v7;
        read v61;
      v100 = ((v59))/(((v64))*71)%v30;
      } else {  v59 = v68; } }
  } v66 = ((v95));
} procedure proc5{ while (((80)!=v71)&&(!(v52<v21-v60*v11+v91*82*40))) {
    if ((v2*v33)!=((v82))) then {
      if ((v96<=(v77)%(v32)*(v87)*v29%(v40))||((v75%83*(v14)<=((((v23)))+2+v51))&&(((!((v25-v51/(37)/(v54)-(v27))!=v20-((54))+v91%v75-(27)))&&(!(v67>=(62)-v20+(v12)/(v50))))||(!(v45+(v57)-(v43/(v41)*v6)>v101))))) then {
        v75 = (v62);
      } else { v92 = (((92)-v5)+v11);
      } v82 = v42;
      call proc6;
    } else { v58 = ((v96)*36);
    } while ((((v71)/(16)/v20-19)==(v71))&&(((((v81)!=(v65))&&(v96<((v14))))||((!((((68*v60+v30)))<17-(v26)))&&(v99*v65*v58/v31*v85%v100>=(v2))))||((!(v49%v34==(v6/(v25))))&&(!(v78/v53==v82))))) {
      v9 = 63-(v101);
      v19 = v84*v98;
      v55 = (v37);
    } v12 = v31*(v37);
    if ((((v37)==75/82/v16)&&(!(v29-v96*v57/v77%v16-v1/v83-v52+v47+v1<=(v6-v74))))&&(((v32)/49*v87)<(44)*v53+v6)) then {
      v78 = (v28%v75*v42)+v88*65/(42%v43/v99/v22-(v36));
      v49 = 36;
      v58 = (((v40)/v86));
    } else { v42 = v2-v69/v81/81;
    } v99 = v74/(v3/(v63)*v86)/v17;
    v97 = v101%v74%(v42)+(v17);
    v12 = (v85%v64)/v46-v39;
    v43 = (v58);
    v32 = v32;
    v42 = v42%v81/93-v58*((v80))+(v75)%v30;
  } v28 = 74%((v30));
  v94 = (v25+v98);
  print v64;
  v31 = (v28/(v36)+(v34)/v17);
  read v39;
  v67 = 12;
  v11 = (v34)%((v72))%(v98)+(v55);
  v59 = 11%(v9);
  v23 = v26;
  v24 = 34%(v87)/v13%v24;
  v18 = (v33);
  v10 = v86;
  v52 = 20+v90*(v13);
  v77 = (v47/v2%v94);
  read v28;
  v30 = v14/26-v35*12/v77-v76-((v41));
  v85 = v52+v67-v65;
  v16 = v50*(67)+(64)+v98/((v75));
  v66 = (v96);
  v92 = v25;
  while ((v61+23==(18))||(!((v81)!=v50))) {
    v84 = ((v53));
    print v41;
    v12 = (v17+v73);
    v45 = v49*(v84)+(20)*v85;
    v75 = (v94);
    v29 = 45;
    while (((!(52*v51<=(v50)))&&(!((v68)-(v72)!=v14)))&&((!(((v41))>v87))&&((((((v89)))*(v58)-v62>=(v36))&&(v52%v83-(v79)>((v83))*v55/(v9)+42*v41))&&(((v58!=57)||((((v100)))>((v32))-101*(v32)*v54*(v66)))&&(((v83)/v76-v85/(((v57)/v27)/v25%v99+v13/(98)*v28)<=v33)||((!(v75-((v81)%v75+v70)!=v87/v42/75/v83+v4%v27/v8))||(((v47+(v20)-(v89)+v90))>=v99%72%(v73)*v8))))))) {
      v97 = ((36))/v97*40%17+v37*v46;
      v86 = (65);
      print v83;
    } if (((v53%v53)>(v93-v67))&&((!(v12*v16!=v5%(v26)%v14))&&((v97)%(v57)+v94+v30%v17*(v17)%v24*93==v71))) then {
      v51 = v36;
      v58 = v95%v1;
      v1 = (v73);
    } else { read v58;
    } call proc9;
    v77 = v69-((95));
  } v29 = v48;
  v53 = (v74*v50*v50);
  v1 = (v52)%v49+v44%71-87/78;
  v73 = ((v64)+(v5)*v84)%27/(v75)/(3);
  v44 = (v32*v101-62);
  v26 = (50-v57)/v23;
  v44 = 89;
  v40 = ((80));
  print v84;
  v41 = (v5);
  v36 = (81)*(21%v6);
  read v1;
  v65 = v71;
  v6 = (v16);
  read v73;
  v70 = v1*((v4)+v76);
  read v48;
  v48 = v14;
} procedure proc6 { v31 = (v46);
  v55 = (v53);
  v96 = 14;
  v80 = (v11);
  print v56;
  if ((!(v92<v7))&&((!((93%v41)<v20))&&(80<(((v7))%v7)*(((v84+v46)))))) then {
    v76 = ((v17));
    v25 = (v48)/((v73))/v51;
    v97 = (45);
    v24 = (((v3))*v99);
    v92 = (v73);
    read v46;
    v42 = (v90%v61);
    read v89;
    v21 = (v6)%(v82)+(v93)+(v9);
    while (((v89))>=v54%((v24%(v95))-(v29))) {
      read v94;
      v48 = (v45*v15%v94*v62)*5;
      v84 = v20/25; }
  } else { if ((((!(v14<v73/((v63))))||((!((8/v101%74)/(v51+v99)<(36)))||(98-34%((v28))<=((((v54-18))/v81)))))||(((!(79>=((v13-v68/v55*v76)*v10)))&&(v26>v64))||(((v12-v10))!=(v38)%v81)))&&(((v42-v76-v78+59*(v23))!=(v28))||(((!(80-v71<v21))||((v50)+v2+(((47)%v45))!=v20))||(!(v36<v92))))) then {
      call proc9;
      v50 = v20;
      while ((((v10))<=((v77)-((v82))))||(((!((v76)!=(v85)))||(!(((v25))-v12-v43!=((v30)))))||((87>=v54-v33)&&(((91-v33%v99*v48*v31>=(((10)))+63%((14)))||(!(v61%v51==v61%v86-(v32))))||((((v26+(40+50)+v27))==(((16+v71))))||(v32-v27/(v74)!=v25)))))) {
        read v4;
        v58 = ((v74))/((v42))*91+65%v54+v83;
        v70 = ((v58))/v37/v54%(v68*87)+91; }
    } else { v24 = v97;
    } v63 = v6-v96;
    read v88;
    v62 = (28)/(60+(v91));
    v25 = ((v21));
  } v64 = (v68+42*v55/v82-v68+v20+v25-v61+v61);
  if ((!((v2)*v40+v95%v56*v46-v35>=((v56))))||((v33%v23*(17)/(v65)*(v99)>=(((v69)))%((v20+v61)))||((((!((v62*v22*v80)%v41==53/v63*v17))||(((v29*v38)+(v61)*v26>=((v6)))&&(v10<=90)))||(((v59)%69*v32/v39<=((v90%v7))*v33+v36-(v87*77)/v87)&&((v5)>=(((v57)*20)-(v12)*41))))||(((v57-(v44)-93)<v64)||((((v24%55+v23)!=v100)&&(!((2)*v69>=v50)))||((v47)<=((v49+v98+v56)))))))) then {
    v85 = ((57));
    v36 = ((v58*3%v24)%1)-(v35)-v95*(v30-62);
    v3 = (v34);
    while ((((((76+v51-v37))!=v76-(v81)%v35)||(!((v61)==(v14/v40%v48%(v75%v11)))))||((((((!(v63>(v89)))&&(!(v64-v91/v86-v6+v7>(v30%v58-82))))||((((((v96)))!=v18)&&(27!=(((v56*v87)))))||((v42)!=((v54)*((v81))-v55%v90))))&&((((v59)-((91))%v82-v10==v61)||(v53==v13-v100+v50-(v64)/v10%37+v61/v55))||(((((v19+v6-v62%17)%(v57/v47*v49)))>=v13%(v33+v7))||(!((((v94+(v54))))<(v32)*(v81))))))||((v76*v14+v21+v63/v50-((v92))>=v82*v77+(v76))||(!(((v78))/v61%v80>=62))))&&(((v70/(v99)/v57%v46+v41/45>(v34*v51%((v8*v55))))||(v39%v7+v34+v87>v96))&&(!(v52!=(((61)))*((v3)))))))&&(((v49/(v82)%(v99)))>=((v22)))) {
      v72 = 81+((61));
      v53 = (v25);
      v71 = (73);
    } read v47;
    v39 = v78;
    v89 = (((v93)));
    v73 = (v57);
    v17 = v4+(v59)-77;
    v45 = (v81);
  } else { if ((!((((v62)))>((45))))||((!(v19!=(v99%v13)*56))&&(!(v23>v58)))) then {
      v73 = ((v68-v40));
      v41 = v24-v99-14;
      v79 = v43;
    } else { v94 = 10/(100)*v22/(v11)%(71)-v58;
    } print v72;
    if ((((((v27))>v53%(v28)+(((v97)))+v31/v28-v15)||(v61<=(v46)))||((!((v21)+v41%v36%13%v14>(v18)/v91))||((v47-67<=v24)&&((!(v91*((v88))<=((v100))))||((v89)<((v17)+v76))))))&&((((!(((v18))>100-v39+(62*v46)/58))&&(!(((v19)/v52+94)>=v32)))&&(!((((v9)))%v74>=((((16)))))))&&((v32)<((v56))+v99))) then {
      v83 = (((v20)));
      v100 = ((v23))*v30+(v33);
      v74 = ((v22));
    } else { print v85;
    } v5 = v52*v17;
    v28 = v82/v74%v41;
  } v65 = v47*v62*v80/v84*v67;
  read v26;
  v23 = (v22);
  v10 = (v76%(v83));
  print v90;
  read v60;
  v92 = (v1)-v3;
  if ((v13)/v80/v95<(69)*v6+(v17)) then {
    v53 = ((v86));
    while ((((v55))!=(v72))||(((((!(((38))>=(v49)))||(!((v2)!=(v49)/((v19)*v7))))&&(((v28)/37+v26%v63)!=(v30-88*((v93)))))&&(!(86-v34/(93)%((99))*80%((77))>(v60%v13%v53))))&&((((((82)%v42))==44-(v73))||(v3>94*v79%v100-v97))&&((!((v94)>=((((v87))))))&&(89%(58)==60))))) {
      v32 = (v56);
      v95 = v79-v20;
      v13 = ((((v11)%(41))));
    } while ((((((17))!=v44)&&(!(v16%v38+v28-v35-76*38*73*(v95)<v2)))||((v32-(((v65)))/v44<=v74/v97+(v60))&&(!((39*v8)!=v51*(((v12%v6*v101))*v28)))))||((!((v45*v60)*(v34)<=(96+(((5))))+(v15)))&&((((v57%v5%v5))<v38)||((!((96)>v92/v72/v78))||(!(v17<((v75)))))))) {
      v2 = (62);
      v92 = (v64)+v82;
      v3 = v93;
    } call proc7;
    if (((v52/v53%73/v101*v36%v57<(v67+v35)%(v16)/v69-v44-v89+(v48))||((!(((v35)*92%99)==((v96))%(v84)))||(!(v81-v90%(v50)-v54-v57/(v34)<((v20))))))&&(((v34%v93-(97)/v79<(69%v63)*v32+v71-v94+v30*(v87))||(((v76)<=(v53)*(v100-v29/v40)*46)&&((!(v31<=39*v96))&&(!(v8>=77*(((v54)))%14)))))||(!(v40/((v28))*v69<(v15-(v57)-v44))))) then {
      while (v34<=(v7)+(82%v81)-(18)+(6)+v6) {
        v101 = (50);
        v85 = v96*v45;
        v89 = (v14);
      } v30 = (v41);
      v58 = ((((v40))))*((v7));
    } else { v58 = (v21+v49)%(v94);
    } v91 = v68;
    call proc7;
    v59 = (v90)*(32);
    while (((!(v24/((v30))>(v17)+v45*v17-v12))&&(!((v23)/v36/(v61)>(((77))*v37)-v84%v76+v88)))&&(74-(86)<=v29/(v29))) {
      v54 = ((v73/v44*v68))-(9)/v81;
      v13 = ((v50-v80%v55-1));
      v70 = (36*v5%v9%v74*v101*(71)*v37);
    } v88 = v53*((58));
  } else { v31 = (74)%57-v2*v97%v3;
    v46 = (v29);
    if (!((((v36))/(v16)+v93)<=((v14-14)))) then {
      v22 = 77;
      v14 = (v10/v27);
      v69 = ((v77))%v44;
    } else { v6 = ((66)*v82/v53%v98);
    } v69 = 68-(v93);
    while (((v17>=v28%v30)&&((((((v80-v87))<=v38*v22)||(!(((40))%(v75)<=76)))||(!(((v36%v30%(v13)*80*(v89/((v99)))))+(((v85+55)))>=((v66/v24/21)))))&&(!(v69/v22!=90/(v75)))))&&(!((v62/v96)-v73*v54-(((v3)))%v3>(v35)%(v80)+23))) {
      v23 = ((v2)/(v32));
      v30 = (v6);
      v51 = ((((v55)))); }
  } v8 = v38;
  read v61;
  v79 = v97;
  read v44;
  v37 = 98+(v71);
  v88 = (25);
  v26 = (v89);
  v34 = v41;
  v84 = v15;
  v78 = (v47);
  v77 = v5;
  print v24;
  v10 = v101+(v49/v17);
  v21 = (((v47-v11)));
  v25 = (v81)/v52*v31;
  v35 = v69%((v19));
  v56 = (73);
  v89 = 87;
  read v95;
  v25 = (84+v89)*(v36)%(v28)%v36;
  read v44;
  v55 = 97*(v18)/(v76);
  if (((v62/v52)<v46)&&(((!(((v88/(9)))==((v78))))||((!(((v21+(v34)*v44))>(v35)))&&(!(v8/(v22)>=v25))))&&((v33)<=v29+86*v44-(v22)+v96))) then {
    print v83;
    if (((v47)<((v97)))||(!((v86)>v29))) then {
      v15 = ((v7/v27)-((v90))/v55);
      v54 = v34;
      v15 = v14-(v19%(v58)%v84*v38)*11;
    } else { v12 = (((v8)));
    } v93 = (((v62-v30)%v23-(v17)));
    v12 = (v35);
    call proc10;
    v26 = v65;
    print v53;
    v46 = (v69)%((v25));
    v33 = v39;
    v44 = v82-v59-v8;
  } else {  v7 = (87-v67);
    v59 = (v1%v44+v68);
    v43 = (v77);
    read v22;
    v81 = v12;
  } if ((!(v47+((v39))<=v28%(v56)/v83%v9/v16+v62))&&((!(v16>=((v4-v38)%(v58*v52)+51)))||(!(v76*(v69)+v73!=v76)))) then {
    v19 = v38;
    v55 = 74%((v71))*v69;
    v65 = 59;
    v37 = ((v3));
    v88 = v66;
    v47 = v83-32;
    v81 = v79;
    print v62;
    v92 = (((v23/v16)/v13));
    v6 = (v41);
  } else { v1 = v60%v4;
    v57 = v11-(v80%(v27)+(82)%v40+v3+(v21));
    v39 = 8;
    v34 = 21*(v13)+v65*v9%v65%60;
    call proc7; }
} procedure proc7 { print v31;
  v81 = (v67*v58);
  v20 = v11;
  v16 = v74;
  v25 = v34;
  print v27;
  print v4;
  call proc9;
  v47 = v92-v40+v84;
  v85 = v18;
  v89 = v68*((v57));
  v34 = (v34);
  v46 = (v77);
  while (((25+26)<=(v81+v5))||((!((v24-v81+v19)<(v67)-(43)))||((v61)!=(22%9)/v18%((v86)/v47%v16)))) {
    print v61;
    call proc10;
    v65 = v74%(v14)+v44+100*(52)/v101;
    v81 = v70-(v60)/v41+v36*v58;
    while ((v29)<v56%v95) {
      v17 = ((v7))-((18)*v2);
      v52 = v50-(((v17)-v59));
      v86 = 37;
    } v44 = (v7);
    v59 = v78/v61*v61-v31;
    v90 = (25)/v28;
    v81 = v29+v25;
    call proc9;
  } v87 = (v32);
  v37 = 13;
  v55 = v94%(53)%v34*65*29+(v87)%v56-v95+v53;
  v39 = ((v69));
  print v46;
  print v31;
  v10 = v35;
  v2 = v39;
  v11 = 37*v32/95*v54/v73;
  while (((v39)<v99*v49)&&((v9)!=(88))) {
    v20 = v74/(v41);
    if (!(v36!=v6)) then {
      v70 = ((v52));
      v88 = ((v53)-52);
      v94 = ((76%v83+v83));
    } else { v92 = v73;
    } v23 = ((((v35)/(((v37%61))))));
    v12 = v97;
    read v43;
    if (!(((v3))==v53/v36+v59/v55)) then {
      v91 = v85-v61;
      if (!(v24>=(v58))) then {
      v2 = v69%(36);
      } else { v43 = (((v53))-(v72%v43)/v7/v50);
      } read v83;
    } else { v91 = v45-(v56%(v25));
    } v23 = ((v54))/((v18));
    v78 = (((v27)%v22+(v97)))*v87*97/(10*v30);
    print v86;
    v75 = (((v79)-v92*v37));
  } v67 = (v91);
  v10 = ((v12));
  v79 = v90+v17;
  v41 = 77+(27)-v23*v54;
  v93 = (v21)/(15)+v30+v99-(v70);
  v10 = ((v50)/(v25))*(45);
  read v72;
  v26 = v45/v4-6/((v77))*(v72-(v48));
  v1 = v7;
  v63 = 78;
  v73 = v47*v24;
  read v33;
  v80 = v30;
  v27 = v33*v64-v29;
  read v9;
  read v56;
} procedure proc8 { call proc6;
  read v38;
  v83 = (v31);
  v2 = (76);
  while (((!(v100*(v99)%v85%(v17)/v28/v71*v16*(v69)%v95-(v69)%v18!=(21-92)*v75))&&((!((((v24)))<(v53+v95-32+v99)))||(!(v87<=(v44*v7*v28)))))||(!(v26%v93+(71)*v73-((43%v62))*72>=v56+v2+(v72%v8+(6))))) {
    read v20;
    v27 = (18)%v78+v57+(v52);
    read v86;
    v86 = v76*49/v101;
    call proc7;
    v31 = (v37);
    v63 = 26%(v15)+(v22)+v60;
    while ((((!(74-v59+95-v7/v43*(v12)+v38>=v87))&&(((((v36>=((v39)))&&((!(v34<(v76/9-v94-v53)%((v4))))&&(((((v30)))/v36)+v8-(v74)>=v5)))||(((v39))<=18+v30))||((v91)==((((v51-85))))))&&(v48!=(v11))))&&(!(86+((v26))>=v96)))||(((!((v33)!=((v83+86))))&&(!(v99-(v44*v24)>=((v35)))))||(!(v1/v36*v8==(v98))))) {
      v69 = (11);
      print v68;
      v41 = (((v53-92))-v19-v58)*v22;
    } v45 = v30-(v59);
    print v1;
  } read v59;
  v53 = (v46)*101*(v65)+88/(v39);
  v16 = (69);
  v23 = v100;
  call proc10;
  print v4;
  v84 = v11*v41/(v13)/v78*((67));
  v40 = ((55))/v69/33+(v57)/v6;
  print v59;
  v57 = v95-(v70*v96);
  v49 = v98-(v75%v65%v16)/v88;
  v11 = (v95);
  v11 = (v78)+34;
  v39 = ((v39)+v84/v36*v88);
  while (((((v89+((61))!=v27%84)&&((v33)+v77-v10==(v32-(v95))))&&(!((88%(v85)/v26*(37))-v92!=(v20%v39)-(78))))||((!(((32-(v56)))>=(v91)))&&((5-v69)<((v96)/v63*v14/v83*66)%((v60)/v22)+v9*22)))&&((((v32%v72-v83%(v8))>(v88/(v55)))||(!((v52+v18)<=v28/v88)))&&(((v50-v46%2%37))>43-(v39)))) {
    while ((((((v98)==v81+2/68)||(!((v25)+v62*v33*((59))-v93!=v18)))&&(((!(7==((46-14)/v56)))||(!(83-55-((50))!=((v9)))))&&(!(v93>((v31))))))&&((((((v59))!=((v64%v76)))||(((!(v19*v26+v16/v34+(80+v35)-v95+(v17)*v47>45))&&(!(v19>(v70))))&&((!(47<=v5))&&((89*v72-v76!=23+(v1))&&((v29)!=(v11))))))&&((v19)==v64))||((!(v79-((v98-v45))-(v6)*v1-(81)+v69<(v45)))||(!(v24%v14*76%52>35)))))||((((v33)/((26))>=v46/v77)&&((76+v17-11!=(((46))))&&(95>(v33%v16)/((v44)))))&&((v53)*((v66))%(v93)>=(v45)))) {
      v100 = (63)/v87;
      v43 = (v100);
      v49 = (64*v66);
    } v84 = ((v21-v92/v31+(v22)/v95));
    if ((!(v33+(v57/v65/v31)/v6>(v62)))&&(((!((59)==(v32)))&&(((v58))!=v80%v66-(v21)))||((!(v25!=v60%(v37)/47))&&(!((69)/v85+(v37-26)>=(v45)+v17-v35+((v2))-(v20)))))) then {
      v16 = v9;
      v35 = (v48*(v94)-v32%5%(v55)*(30*38))/v7;
      v1 = 74;
    } else { v31 = v87%v53;
    } v78 = ((87));
    v12 = v56;
    v79 = ((13)%v31);
    call proc7;
    v88 = v101+(v65)/v97;
    if (((((71))>=v26)||((((v2*85))<=(v79))||(39/v12!=(3+v34*(v84)/v32+v9))))&&(!((v93-((v60/v25/v97%(v77))))<v26+v44))) then {
      v8 = (v35);
      v18 = (v40-(v42)%v92*v28);
      v37 = v60;
    } else { v76 = (v38);
    } if (((v79))!=v28%(v20)) then {
      v84 = (((14))+v99);
      v31 = v74/v26-(v17);
      call proc9;
    } else { call proc6; }
  } while (!(v87<(v60)%100+(v9/60))) {
    v90 = 67/(v46)-v52%v11-v62%v83;
    print v76;
    v27 = ((19+((v20))));
    v30 = (v21);
    v5 = (v77-(v76));
    print v35;
    print v3;
    v63 = v69;
    print v5;
    v90 = 30/(v43+v23)+v30;
  } v46 = (v2+((v86)));
  v12 = (v25)/(v76);
  v39 = v26-(v13)%v99%v100-v89*v27-v35%v34;
  v13 = (((v15)));
  v18 = (v13+v16-v90);
  read v37;
  v13 = ((v82))/v19/(v51);
  v72 = v76/v70*v76+v51-v34;
  v17 = (v18)*(v53);
  while ((!(((v3/v57*v74))-((v35))-v67>=((v13))))&&(11==v23-v11)) {
    while (!(21/v88-v90<=v80)) {
      call proc6;
      v25 = v20;
      print v74;
    } v15 = ((v84));
    v2 = v2;
    while ((((((9)==v51%v70*((v80)))||(!(v8!=v100+(v87))))&&(((v78)==(v98))&&((((v70)==v45/v4-76*(2))||(v65/v66%(v89)==(v3)))||((v39+(v93*v101-v58))>=((v77))))))&&((v3)<v49))||(((v82))>=v44*v96/v51/(84))) {
      print v82;
      v97 = (((v88)))+v51*(98)%(53);
      v75 = (7)/v93-(v21)%v100/v10/82;
    } v50 = (v53);
    v87 = 75;
    v38 = (v91);
    v31 = v96%8;
    while ((5/v85%v19)==v73) {
      v96 = v12%v2*(v87-v59-27);
      if (((!((80)<(v54+v82-v8+(v12))))&&((!((v58%v79%(v99)/v8/v50)==v69*(v51)))||(((((v95/v32))<=v92)&&((v35-(v98%v22-v48-v72)==90)&&(!(((v64))>=(v97/13)))))||((v64)<(v89)))))||(v69%20/v84/v20%((v89))-v48<=(v1-v40*(21)%v26/v43))) then {
        v53 = 1/v99/(101);
        v8 = ((v62%(v67)%(v31)/15/34));
        read v36;
      } else { v66 = (40);
      } print v25;
    } v55 = (v59);
  } v40 = v93*v16;
  v39 = v22*v95+(((29)));
  v75 = ((v35));
  v44 = v83-34;
  while ((v14==74*(v66)+v8-v100)||(!(((v9))+((v4))>=v80))) {
    while ((((!(((((v50))))<v66))&&(((34)/(v22)-v23!=(v46%v38+v72))&&((56)>=v74/v22)))&&(((!(9%v28+((v78%v23/(25)))!=(v22)))||(((60)*(((v70))%v1)+(v56)>((v40)))||(((((v8+v10%11>=((v7)))&&(!(v55<=(v67+(v42))%(v92)*(v26)+v78%(v39)%11-v17)))||((!(44/v57+v34*v21*(v101)==(v93-v23/v6)))||((!(v45<=((v26))))&&(52%v1/((v28/(v62)))>=(v30)/v65%((v53*v92))))))&&(((v56))!=(v87)/v69-(v94)))||(!((3*v79)<(v16))))))&&((!(v93%((v51))<=((v49))))||(((v42/v23))<(31-((v80)))))))&&((((v94%((45))>(v78))||((!(v34/v75/80*(98)!=v93*v39))||(v44>=(v74-56))))&&(v39>=((v94*v18/v70+v47+v86))))||((((v31)<=((v57*v71)))||((!((v11)/v17/v99%v48/v34%v33!=(33)+v7))||(!(v92%(v74)*(v9+v36/v81)>v72%v12/v54+7))))||(v6/47<=97/v57*v39%v28%v33-v52*v32)))) {
      if ((!((v80)!=(86)))||((((v41-v74%v87)!=v63*v45-(v24))&&(((v91)<((v29)))&&(((((v71))<(((24-v56+v90))))&&(!(v7/((((v70))))<v23+v83*v22)))||(v52+(v74*22%v41)%v99<=(v49)+v47))))&&((v17)<(v19+(v60/v92/v98))+3))) then {
        v19 = (v50);
        v16 = (v88+v53/((v8)));
        v91 = v30;
      } else { v22 = ((28)+(v32/(v1)));
      } v93 = v3;
      v33 = ((v2*v82));
    } print v73;
    print v58;
    v47 = v90*v97%(v83);
    v12 = v12;
    v41 = v24+v24;
    v38 = v8;
    v35 = (v64)+((v23));
    v17 = v10;
    while ((!(v97%(79)>=v2*(59)))||(!((v18-v84)>((v60)-(v28)/v53)))) {
      print v89;
      v85 = v97;
      v48 = v7+v42; }
  } if (((!(v97==12%(v23)))||(!(((v88))<=(85*v91/(v83-v60)))))&&((!(((v93))==92))&&(((!((((v43)))!=((46))/(v62)))&&(!((81)==(92))))||(!((v100)>v101%v36/v15*v56*96-v55))))) then {
    v12 = (v67);
    read v76;
    v87 = (86);
    while ((v43!=(v87)-(v75))&&((35*(50/v70*(v92)%93*v31%v20-v15-(v33%v15))>=(v71))||(v50+3*v100+(v61)>v37))) {
      read v81;
      v91 = (87-(v19));
      v43 = 54+v39/(v85)-v55/(v61);
    } read v93;
    call proc9;
    v36 = (((v13)/v17));
    v77 = v4;
    v57 = (100);
    v78 = (((v96)));
  } else { read v5;
    v6 = (((38/(v14))%101*v24));
    v84 = (v38);
    v22 = v59;
    v12 = 39-v15-(94);
  } while ((!(41-(24)+v6!=v33*(v62)))&&((((!((v51)/v20/(3)!=v12))&&((34)/v19+51-76-v34>v39*v39+v63+(v48%60)*v9))||((v49)>=v99*v85))&&(!(((v99))>(v69)+20)))) {
    v100 = v1;
    v54 = v12/(v87-v98)-(v42)-v1-12;
    read v82;
    v24 = (v43);
    v99 = (v57);
    while (((!((((v52)))!=(v18)))||(((v71<(v75))||(!(((((56+v85))))==v66)))&&(!((v36)+v93-((5*v54+(v97%77/v5-v5)))<=v52))))||((((!(((v26))!=(v28)))&&((!(16-v56-(v82)%v86+v81!=v37))&&(!((36)>v32))))&&(!(v71/v46>=((v26*v15%(v7)/v74)-(v72-(100))))))||((((!(5/(v37/v74)<v68*((v97+v83+v38))/v58+(v96)%45))&&(!(((v86))!=16)))&&((!((v41)>((v68%90)%v30)))&&(v75>=60/(v41)/v64/v83+v37/v99)))&&((!(30<=(((v70)))))&&(!(v65>=v24+(v79)*v8)))))) {
      v73 = (6+v68);
      if ((((v100==(v95)+v49/v97)||(((21*71))/v85!=(55-(v79)*v78*92)))||((!(v77-(57)<=v45%((v63))))&&(!(((((v99))))<=(v8)))))&&(v14==(49%v25)-((v23)+28+v87)+(v17-v87))) then {
        v47 = v21;
        v23 = (((((v8)))));
        v41 = v51/v9-(v4*86)-v3*v74;
      } else { read v25;
      } read v83;
    } v49 = v4/v1/v5;
    v76 = ((v91))*(17);
    if (12/v39!=v85) then {
      if (!(((v71))==v73)) then {
        v34 = (((v84))%(52));
      } else { read v16;
      } v90 = v35;
      v85 = (v48);
    } else { v99 = (((53)));
    } v76 = (v46-v42)%((69))%(v20);
  } print v64;
  if ((((25-78*(v47)<=(v90)*v90)&&(66>v42))||(((((((v47)+96>v94)&&(91<=v79))&&((v44%(v77+83%v6)<=(v84))&&((v58)<v30*((v43)))))||(!(v29-(v8)!=13+(v12-v36))))&&(!(80%(v53)>=(v83*100+v16*90%v82/52/(v27+(v92%v74*((v101))))))))&&((!((v40*v59+10/v99)/(v33)<((101*63))))&&((!(v7+v9<v21/(99+v76+v29)))&&(v52/v85-47*((v85/v64*v51)%v89)+(v63/55)!=(79)*(v80))))))||((v28%v6*v76<=v53)||(!((v87/v29*v37)/37!=v22+(v62*(32)))))) then {
    if ((((89)%(v95)-v17>=(29/v10))&&((((!(27>(v94)/v61-v23))||((v52-5/71)!=v47/v82/v58))||(!((v29%v16-v45+(v39)/v44)<=v21)))||((v24)!=(((v94-v14-((v21))))))))||(((((v49)%v98/v15-v55==(v27/v89*80*84))&&(v12-((v64))+v77*94/(v17)/(65)/(52)-(101/v67/(v37))<=v15+40+(v39)))||((((16))==(v87)*v72/(v99))&&(!((((88))-v2%v88)*v42==v84*(v60)/v83))))||((52)/((v93)-v79%v27%v26)<24+(62)))) then {
      v68 = (v63+(v19));
      v76 = v5;
      v65 = (v89)*(v64)%(v1);
    } else { read v63;
    } print v46;
    while ((v1>=v52*(v77)-v69%v42*((13*v17)))&&((((v62)+v69*42!=(v2))||(!(37<=(v61)/(v53)-v34)))||(!((v62+18/(v14))==((v30)-v27)*(v82))))) {
      v69 = (v5+v37/v32/v69+v62%v74/(v31)*v48);
      print v8;
      v4 = v29+v93%v96+v32%v43%v88%v63/62+(44)*v1+v50;
    } v17 = (11);
    read v49;
    v16 = (v25);
    v78 = ((64+v14)%(13)+v37);
    while (((!((v96%v39)-v14!=(v33/v70-v53-1+(v83))))||((((!(v26/61+v10-80/(v32)/v77/v50==v96%v53%(v21%(v85))-(v91)))||((!((v7*v19)<=v45))&&(!(v32/(v78)*(46)*v12>((94)/v79)))))&&((!((((v84)+18))>v80))&&(!(v48==v45))))&&(!(v38-v15>=v23))))&&((v34)/23-v76/((((v59))+(2)))==(v1)+(v35)-v73/14)) {
      v57 = ((34)-((57*v98))/(((v24%v97))));
      v54 = (v3)+(v57%v101);
      read v14;
    } v17 = v57-v68%v77+v24/v84+(v11)+(v88%v21/v42*v41+v76/14-v39);
    v52 = (v65)-((38));
  } else { call proc5;
    v49 = (v7)-v59;
    if ((((!(v81+(v86)%v79/91*v69-v43!=v83+v14))&&(((!((67)<=(v14)%v82))&&((v81)*(v62)==(v51+v75)/v35))||((v56)<=17-(68+v77))))||((v84)*(v25)==(72)-v41))||(!(v20%v37/v74/v24%v67%v51>(v48)))) then {
      v17 = ((v94));
      v87 = v8/(40)-(v5);
      v89 = (((12)))+56*26*58;
    } else { while (((((!(v81<9/((19))))&&((v20)+v13*v48/v17/33*(37)*v22%v19%(v4)-v68-v37*v6%(64)<v37))&&((v45>=((v42)))||(((v35)+v27*(v8)<=(((v14))+v30-v30))||(!(v83/v97*(v49)>((v73))%15*v5/v39)))))&&((!(v39*v53>=(((v55)))))||(((!(v63<=(((v13)))))||(!((v40*(v69))<37)))||(!(93-v73+v91-v78+v5!=v50)))))&&((!((v67/90)>=(90/v40*v9)/55))&&(((((v12*v84))>=(((v16%v53)-94)))&&(!((v28)>=(v40%v76)/v76/(v62))))&&((v71<=v55/v20*(64)/v24)||(!((v62)<(v99))))))) {
        read v41;
        v1 = 58;
        if (!((((v47)/69+v94+v8%v30))==v12-v19)) then {
          print v69;
          v7 = 64;
          v92 = (v20*v36);
        } else { v39 = 27; } }
    } while ((((v23%v64-((80)))!=81-(v71/v60+v5*v100+v10))&&((((v95))<=((v7)))&&(!((((v9)))<(v51)))))||(((!(v58/28/(v59)<v74/((v22))))&&((!(v60>=v44*v33))||(54<(51))))||((!((v41)<=((v15/v83%53%v53%v93*16*v100-v29))+v81))||((19)<=v42)))) {
      v59 = 75;
      v61 = 80-(v83);
      v33 = (v39*v82/v73);
    } v83 = (v87%v17); }
} procedure proc9 { v28 = (v89%v67*v15+82*84);
  if ((80%(v14)-((v11*v82))+(98)%v90-v93!=(v65+101*v68))&&(((!(((v54))-v7!=v37+((((v82))))))&&(!((v5)<((v76)))))&&((((v24)+(19)/v80*25)!=(((v61))))||((2/v29+v37+(v6))==((v96)))))) then {
    print v91;
    v50 = (((v27))+90)%(v72);
    v37 = (((37)));
    call proc10;
    v36 = v21;
    v25 = 59;
    v60 = v5*(v63-(77))%(v71*v67);
    v96 = (2);
    v36 = v100;
    v67 = v90;
  } else { v21 = v4;
    v9 = v80;
    read v73;
    if (((!(v36>v36))&&(!((v6)>v84%v38-v73)))||(!(((v1))==v46))) then {
      read v99;
      v100 = ((v34))/v23;
      v2 = v61/v73/62-(v57)%v94;
    } else { read v34;
    } read v34;
  } v23 = 64*99;
  while (!(v89==86/v61*11)) {
    if (!(v23-v90*v98<=((33))*v8+(89))) then {
      v100 = (v68*33)*v61+(v4-v14/v18);
      v14 = ((v51));
      v95 = v90%v43+v86+v67;
    } else { if (((!(((v51)*v17%v98%v51)-45==v20))||(!(v46==((v66))-23)))||(((v76)/v68)>=(((v31)+v31)))) then {
        v24 = v26;
      } else { v34 = ((v98)-(v76)-v98); } }
    v67 = v42+v84*(v99);
    v90 = v64%22-v42+v14/v61/v85;
    while ((((13*96))!=v97)||(!(((v65))>(v50)%83*(v5%v41)*83))) {
      v31 = 15%(v38);
      v68 = (v9)/23/(v77);
      v19 = (v78%v80*v91*v26);
    } v89 = ((v97-(v71)/(83)));
    v75 = 14;
    v35 = (((v89)));
    v23 = ((v78-v74/v39));
    v26 = (22);
    v73 = ((24/(v12+v44)/v20))+v18;
  } v19 = ((v12))-(46*v47%37);
  v17 = v57+v93;
  v98 = 95*v10/v94%v17;
  v52 = (65%(77));
  print v9;
  v34 = (v86/v17%v87+76)/(v15);
  v69 = (v7);
  read v36;
  v32 = v10+(((65)));
  v75 = v19;
  while (((((v92)))<=v6+v61)&&(!((v10)+v50*((v82))<=((v31%v57))))) {
    v18 = (v16-(v29));
    v8 = v34/(v1);
    if (((((!((((v79)))!=(86*v64)))&&((v73)%(v3)==(v30)%v9-53%((v61*v68)-v64%v18*v50)/1+(v32)-(28)))&&(!(v11>=((((7))-v95%v100)%((v91))))))||(((!(15/(v20)!=(v48*((v9)))))&&(!((v2)>=v95%v38)))||((!(((v50))==(v60)))||((((v15)))<(85)+v81/v78%v88*v6%(v90)%v19))))||(((((v66)-43-v41)+(20)>(v15))&&(!((12)<=(v16-(((89))*v4/v11)*(v42)))))&&(!((v79)*v58/v61%v83>=(v19))))) then {
      v12 = ((v81));
      print v29;
      v38 = v78;
    } else { v1 = (v79);
    } v39 = (101-v31)/v65;
    if (v30*v79*v35!=(v96)) then {
      v48 = ((v33)-v21)-19;
      v15 = ((v9))%v75-(17/99);
      v27 = 41;
    } else { v65 = v31;
    } v24 = v84;
    while (v81<=(v37)) {
      v89 = v101%v74;
      v62 = v33/19;
      if ((((!((v51+v69)==(v70)+v26+(((v53*(v83))))))&&((v47)==(21%(v92+(v98)))))&&((!(v31%v19+53>((v89*(v2))+78)))||(v15/(v76/v99)<v3)))&&(((((((v78)!=v71)||(((v17)-v3/(v57)/v50+v20-v1%((v16))!=v89)||(!((41*99)<=((v64))))))||((!(v70==(v73)))&&(!((((v90)))/v43==v15))))&&(!((78-v18*v17-(v24))<=42)))&&(!(54-v63>((v11)))))&&((!(v90%(v82)-v4+v35*v36/(v64)>(20)))||((100>((v4/v79))%(22+(42%v51)))||((!(v3%(v33)>(62)))||((v69)+((v25))>=(v60*v63)-38%v69*(v32)/v65+(((v83%50))))))))) then {
        v96 = (((v80)));
        v30 = (v61%v60+(61)+v20);
        v90 = 6;
      } else { v94 = (v37); }
    } v86 = v27;
    v39 = v42*v8/v36-39/v37%(v98);
    if (v71>(25%((v13)))) then {
      v13 = v43-v9;
      print v26;
      while (((!((60)%(v83)<=(v56)))||(!((v24)<=v91)))&&((v3)%v40+(v48)>=((33)))) {
        v98 = (38);
        v4 = (v36);
        read v27; }
    } else { v44 = v49; }
  } v29 = v48;
  v101 = v37/v28/v51+v66*v15-v22+v98;
  v94 = ((v20)/v88)/v55+v56;
  while ((!((v44)<=(v28*(v40+57-v18-v83-v47%v5+v60))))&&((((!(v16/(v55/v64)<((v56))))&&((!(((v19)-v70)*v15>82))||(!((v91-(v31)/((v18))%v89-81-49)>v48*v54/(95)))))&&(!(v28<=((v92))-v13)))&&(!((v11)!=17*v78/v65-v50-(((v41))))))) {
    v66 = ((v27))/v24%(((v44)-v88));
    v23 = (60)+v1%v76%v80;
    print v94;
    print v69;
    v11 = ((v101)-(v14));
    v90 = (v1);
    print v2;
    v5 = (v82/(v97));
    while (((!((93)==(v29)+v81))||((((v18*(1)))-(v76/v13)>((v38+(v40/v28-v42))))||(!(v31%35+v23+v42==((v9)%(v33))))))&&((!((v85)<(v84)))||(v67>(58)))) {
      v56 = 72%83;
      if ((!(7!=(v14)))||((53)/(v42)%(14)%v92*(v75)>=(v37)%(v99)-(v63)*(v52)+v29/v39%v62)) then {
        v27 = (v55);
        print v75;
        v37 = v28;
      } else { v31 = v84;
      } v55 = ((v76-(v63/69)));
    } v89 = 81/v1-93*v54%(v20)%((v47))*59+34+v67/42;
  } print v38;
  v26 = (((v28)/(v94)));
  v88 = (((v19)*v87))%v8/((v55+25%v83));
  v36 = (v4)%v18+(((v26)))/(v43/v12-25%v90*v42+v39/64)+v65;
  read v73;
  read v54;
  v77 = (v56);
  v51 = v45+v90*v68;
  v86 = ((v59+v81));
  print v30;
  v66 = (84)-(v66);
  v4 = (40%v30-(v58));
  v35 = v75-(v42-26);
  v53 = (((12)));
  read v57;
  v18 = (v80);
  read v24;
  v63 = (63*v24);
  v55 = ((v74));
  v81 = 101;
  v26 = v31;
} procedure proc10{ v31 = v11*v63*((v55-v83))/v24+((69));
  read v23;
  if ((!((v16/v36)%v27-(v27*v91)>=v86+v89/91))||((v70-((v28))%(v46*v83)<=17+v30)||(((!(((((v69))))==v98-v5*69%(v42)))||(((v50)<91)||(!(90*(v88)==((71))*v42*v86))))&&(((v82))<=((v76))%v101%v56%v25)))) then {
    while (((45%(v6)!=v48)&&((!(v76*(79/(v90)*(v76))==(((v4%v66)))))||(!(((v94)*(v15/(v69))+30)/(43)>(40)))))||((((v3==(8)+(v58-v35-v21))||(((v69)==v91+44+v39%18+2%95-v36+(v33))||(!(v88/(36)<94))))&&(((!((v88)*v51+59%v24+71+v98!=v80%((41))))||(!((v32*v22+67-v68*v70)>=((v44%(39))))))&&((v47)!=v70)))||((28/(65*78))>(v33)))) {
      v79 = v62;
      v21 = v12*(v85)%v34/(30);
      print v90;
    } v60 = v64+v79;
    v52 = ((v29));
    v59 = (v16);
    read v72;
    v64 = 29-((v56));
    v100 = v49+(v101);
    v18 = v8+v85;
    v58 = ((v50))%v62*v93;
    while (((!((v25+v11)!=(5)))&&(((v75*v85))-v59*v22!=(v53)))&&(v55%v40!=v15)) {
      v72 = (v101+v11-39);
      v22 = v42-84+(v19);
      v67 = ((v46)); }
  } else { v10 = (88/8);
    v23 = v61-(v9);
    v66 = v11;
    v82 = (((35-v41/v67)-v17));
    v68 = (46+v9+v32+(((v68))));
  } v12 = (v33)*10;
  v83 = v42;
  while ((((!(40/v76*v97*v70*v13>=53*(96%31)))&&((((v97)!=((v9)))&&((v8)>=(63)/v84/29))&&(57!=((v2)%v71)+v79)))&&(!(42<65)))&&(v5==v59/(v88))) {
    v48 = (v68)%39;
    v100 = ((11+v85/73))*(v54);
    v81 = ((56%(15)/v72+v20));
    v43 = ((78));
    v16 = v61;
    v55 = v32-(v13+v47-75-v38+v92);
    v77 = ((v29));
    v89 = v24;
    v58 = v36-v35-(v25)%88;
    v30 = v95-(v84)%v98%v14;
  } v75 = ((v67));
  v79 = (v73%((v88)))/v22;
  v7 = (50-(v7)/31);
  v97 = ((57)/v2+v95);
  read v66;
  v8 = v5+v33/((v32))+v83-v18;
  read v35;
  v98 = (v48/38)-v54;
  v69 = (v28*v27);
  v18 = (v93+v7);
  print v21;
  v90 = (v26)+v49;
  v2 = (v83-(v85));
  read v69;
  v23 = v52-v67;
  v8 = ((v3));
  v52 = (v24)+v72+55;
  v81 = ((v40));
  v73 = v76-v39;
  v44 = ((v59%v14)+(v80))*((v101))*34;
  v61 = (v90/(v5));
  v40 = v70+v50;
  v40 = v51;
  if (((!(v31+v8+(v35)*v90*v21!=v21))||(((((v48)+v39==24%v48%v58)&&((v10)>=v16-v101+v79%(v77/v40)))||((((v41))!=56%v43)||(!(((v100))>=v83))))||((!(((v76/v23))>31-(v25%v45/v98)/74+v84))||(!(v49+v66<=(88-v42))))))&&((v70%(v72)!=(v50))&&(((v100)%(v92)<v99+v33+v90%v61)||((!(v11/97*v42-v58!=((v28))))&&(!((v99%v101-v49+v6)<=v37)))))) then {
    read v21;
    v94 = 45;
    v80 = ((v92));
    v26 = (v82);
    v92 = (v13);
    v6 = v10/v65%(v95%v39+97)+v99-v8/(v79)-(v18);
    while ((39+((71%v17))/v27+(v20%v23)>=v89*v12+(69))&&((!((v96)-v35>=75))&&(((!(v56==89*v91%(8)*v85%((v69))/58))||((v24%v48/26/(((v100)))>v94-v62-v13-(v5)+v84)&&(((((!(((v73))/(v21/v76)>=(1)))||(!(v74<((v16)*v18))))&&(65>=((((v7/v60))))))||(!((v5)>=v89)))||((((((v24+v28)))+(v94)-v51+v92)==v64-v8+v31)||(v99+v25%v25<(v66-61*v88))))))&&(!(v16/(v61/v98%v60)*(v87)+v98-65<(((v88))%v62%(v38))))))) {
      v101 = (27);
      if (!(v35<(v20))) then {
        v3 = (v93*90*v77);
        v58 = v8%43+v5/((v67))%4;
        v61 = v74+v7-((23));
      } else {  v77 = v64;
      } v32 = v3;
    } v2 = (v85%v98);
    v12 = (43/(45));
    read v86;
  } else { read v93;
    read v17;
    v78 = v10+((v21));
    while ((((((v48)))+(v79)==v26%((((v94)%51))))||(!((v49)%(v82+(((v20)))/v55-v21)!=((v24)))))&&((v27)!=(v65)-v16%v81+(v32)*v77)) {
      v62 = (v28*(v74)%v54);
      v20 = v21;
      read v15;
    } read v58;
  } print v36;
  v48 = (v35);
  v90 = (87-61%v27%v41+(21));
  v41 = (v88);
  v68 = ((v20))/82-v19;
  v35 = v33/v2;
  v27 = (v31/(v4-45)+(v29));
  v32 = v66;
  print v17;
  v66 = v94; }