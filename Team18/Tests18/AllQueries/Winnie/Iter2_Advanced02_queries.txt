1 - Basic: Select with assign pattern (partial match)
assign a;
Select a pattern a(_, _"majulah + singapura"_)
3, 10
5000
2 - Basic: Select with assign pattern (exact match)
assign a; variable v;
Select a pattern a(v, "x + y")
18
5000
3 - Basic: Select with assign pattern (fail match)
assign a;
Select a pattern a("no", _)

5000
4 - Basic: Select with assign pattern (literals only)
assign a;
Select a pattern a("x", _"x + y"_)
18
5000
5 - Basic: Select with assign pattern (substring not subtree)
assign a;
Select a pattern a(_, _"20 + 30"_)
20
5000
6 - Basic: Select with assign pattern (exact substring partial match)
assign a;
Select a pattern a(_, _"majulah + singapura + 1"_)
3
5000
7 - Basic: Select with while pattern (synonym)
while w; variable v;
Select w pattern w(v, _)
49, 61, 62, 63, 64
5000
8 - Basic: Select with while pattern (wildcard)
while w;
Select w pattern w(_, _)
49, 61, 62, 63, 64
5000
9 - Basic: Select with while pattern (literal)
while w;
Select w pattern w("x", _)
49
5000
10 - Basic: Select with while pattern (non-existent literal)
while w;
Select w pattern w("nonexistent", _)

5000
11 - Basic: Select with if pattern (synonym)
if ifs; variable v;
Select ifs pattern ifs(v, _, _)
4, 16, 29, 30, 31, 81
5000
12 - Basic: Select with if pattern (wildcard)
if ifs;
Select ifs pattern ifs(_, _, _)
4, 16, 29, 30, 31, 81
5000
13 - Basic: Select with if pattern (literal)
if ifs;
Select ifs pattern ifs("y", _, _)
16, 30, 31
5000
14 - Basic: Select with if pattern (non-existent literal)
if ifs;
Select ifs pattern ifs("nonexistent", _, _)

5000
15 - Basic: Select BOOLEAN (relation exists)
stmt s;
Select BOOLEAN such that Modifies(s, "x")
TRUE
5000
16 - Basic: Select BOOLEAN (relation doesn't exist)
stmt s;
Select BOOLEAN such that Uses(s, "d")
FALSE
5000
17 - Basic: Select BOOLEAN (assign pattern exists)
assign a;
Select BOOLEAN pattern a("z", _"x * y"_)
TRUE
5000
18 - Basic: Select BOOLEAN (assign pattern doesn't exist)
assign a;
Select BOOLEAN pattern a("z", _"x / y"_)
FALSE
5000
19 - Basic: Select UsesP relation
procedure p; variable v;
Select p such that Uses(p, v)
Cambodia, Laos, Myanmar, Indonesia, Singapore, Thailand, Malaysia
5000
20 - Basic: Select ModifiesP relation
procedure p; variable v;
Select p such that Modifies(p, v)
Vietnam, Cambodia, Laos, Myanmar, Indonesia, Singapore, Thailand, Malaysia
5000
21 - Basic: Select Uses relation (with call, semantically valid)
call c;
Select c such that Uses(c, "x")
9, 56, 57
5000
22 - Basic: Select Uses relation (with call, semantically invalid)
call c;
Select c such that Uses(c, "invalidvariable")

5000
23 - Basic: Select Modifies relation (with call, semantically valid)
call c;
Select c such that Modifies(c, "g")
92, 67, 24, 11, 57, 56, 48, 9, 76
5000
24 - Basic: Select Modifies relation (with call, semantically invalid)
call c;
Select c such that Modifies(c, "invalidvariable")

5000
25 - Basic: Select tuple (different entities)
procedure p; call c;
Select <p, c> such that Modifies(p, "singapura") and Uses(c, "x")
Indonesia 57, Indonesia 56, Indonesia 9, Singapore 57, Singapore 56, Singapore 9
5000
26 - Basic: Select tuple (same entities)
procedure p; call c;
Select <p, p> such that Modifies(p, "singapura") and Uses(c, "x")
Singapore Singapore, Indonesia Indonesia
5000
27 - Basic: Select tuple (single entity)
procedure p;
Select <p>
Vietnam, Cambodia, Laos, Indonesia, Myanmar, Singapore, Thailand, Malaysia
5000
28 - Basic: Select tuple (multiple entities, one entity is empty)
procedure p; call c; assign a; stmt s; print pr;
Select <p, pr, c, a, s> such that Modifies(p, "nonexistent")

5000
28 - Basic: Select Calls relation (literal)
procedure p;
Select p such that Calls("Singapore", p)
Malaysia
5000
29 - Basic: Select Calls relation (synonym)
procedure p1, p2;
Select p1 such that Calls(p1, p2)
Cambodia, Laos, Indonesia, Singapore, Malaysia
5000
30 - Basic: Select Calls relation (wildcard)
procedure p;
Select p such that Calls(_, p)
Cambodia, Laos, Singapore, Thailand, Malaysia
5000
31 - Basic: Select Calls* relation (literal)
procedure p;
Select p such that Calls*("Singapore", p)
Cambodia, Laos, Thailand, Malaysia
5000
32 - Basic: Select Calls* relation (synonym)
procedure p1, p2, p3;
Select p1 such that Calls*(p1, p2) and Calls(p2, p3)
Laos, Indonesia, Malaysia, Singapore
5000
33 - Basic: Select Calls* relation (wildcard)
procedure p1, p2;
Select p1 such that Calls*(_, p1) and Calls*(p1, _)
Cambodia, Laos, Malaysia, Singapore
5000
34 - Intermediate: Select with two constraints (Calls* and assign-pattern)
procedure p1, p2; assign a;
Select <p1, a> such that Calls*(p1, p2) pattern a(_, _"singapura"_)
Laos 10, Malaysia 10, Cambodia 10, Cambodia 3, Laos 3, Singapore 10, Indonesia 3, Indonesia 10, Malaysia 3, Singapore 3
5000
35 - Intermediate: Select with two constraints (Modifies and while-pattern)
read r; variable v; while w;
Select <r, w> such that Modifies(r, v) pattern w(v, _)
13 49, 1 49, 2 49, 14 49
5000
36 - Intermediate: Select with two constraints (Follows* and if-pattern)
if ifs; assign a;
Select <ifs, a> such that Follows*(ifs, a) pattern ifs(_, _, _)
16 27, 16 28
5000
37 - Advanced: Select with many constraints #1
assign a; variable v; while w; procedure p1, p2;
Select <a, w> such that Calls*(p1, p2) and Modifies(p1, v) pattern a(v, _) pattern w(v, _) such that Parent*(w, a)
66 64, 66 61, 65 61, 65 62, 50 49, 51 49
5000
38 - Advanced: Select with many constraints #2
read r; print pr; assign a; if ifs; call c;
Select <c, r, a> such that Follows*(pr, r) and Parent*(ifs, pr) and Modifies(c, "onward") such that Uses(c, "g") pattern a(_, _"x + y"_)
57 34 25, 57 34 18, 57 34 52, 57 35 25, 57 35 18, 57 35 52
5000
39 - Advanced: Select with many constraints #3
call c; variable v; print pr1, pr2; procedure p1, p2;
Select <c, v> such that Modifies(c, v) and Modifies(p1, v) such that Calls*(p1, p2) and Modifies(p2, v) and Follows(pr1, pr2) and Follows*(c, pr1)
67 g, 67 l, 67 m, 67 bangkok, 67 h, 67 k, 67 o
5000
40 - Advanced: Select with many constraints #4
assign a1, a2; print pr; stmt s; while w;
Select <a1, a2> such that Follows(a1, a2) and Parent(w, a1) and Parent(w, s) and Follows(a2, s) such that Follows(s, pr)
65 66
5000
41 - Advanced: Select with many constraints #5
procedure p; variable v; while w; if ifs;
Select <p, v> such that Modifies(p, v) pattern w(v, _) pattern ifs(v, _, _)
Indonesia majulah, Malaysia majulah, Malaysia x, Indonesia y, Malaysia y, Indonesia x, Singapore majulah, Singapore x, Singapore y
5000
42 - Advanced: Select with many constraints #6
procedure p1, p2, p3;
Select <p1, p2> such that Calls*(p1, p2) and Calls*(p2, p3) and Uses(p1, "o") and Uses(p2, "o") and Modifies(p3, "z")
Indonesia Singapore
5000
43 - Advanced: Select with many constraints #7
procedure p; variable v; assign a1, a2;
Select <v> such that Modifies(p, v) and Uses(p, v) pattern a1(v, _) pattern a2(v, _"anthem"_)
onward, p
5000
44 - Advanced: Select with many constraints #8
print pr; procedure p; call c;
Select <p, c> such that Uses(c, "x") and Uses(c, "y") and Follows(pr, c) and Modifies(p, "jakarta")
Indonesia 9
5000
45 - Advanced: Select with many constraints #9
while w; if ifs; variable v; call c1, c2;
Select <ifs, v, c1> such that Uses(c1, v) and Modifies(c2, v) pattern w(v, _) pattern ifs(v, _, _) such that Follows*(c1, c2)
16 y 56, 4 majulah 56, 30 y 56, 30 x 56, 31 y 56, 16 x 56
5000