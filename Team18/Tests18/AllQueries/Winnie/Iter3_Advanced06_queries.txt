1 - Basic: Next with single constraint
stmt s;
Select s such that Next(s, 47)
22, 28, 48
5000
2 - Basic: Next with no constraint
assign a;
Select BOOLEAN such that Next(57, 58)
FALSE
5000
3 - Basic: Next* with single constraint
stmt s1; variable v;
Select s1 such that Next*(94, s1)
103, 109, 105, 99, 95, 98, 102, 101, 107, 96, 100, 106, 108, 97, 104
5000
4 - Basic: Next* with no constraint
stmt s;
Select BOOLEAN such that Next*(85, 88)
TRUE
5000
5 - Basic: Affect with single constraint
assign a; procedure v;
Select a such that Affects(a, 64)
62, 63
5000
6 - Basic: Affects with no constraint

Select BOOLEAN such that Affects(25, 30)
FALSE
5000
7 - Basic: Affects* with single constraint
assign a; variable v;
Select a such that Affects*(81, a)
82, 83, 86, 88, 89, 90, 91, 92, 93, 95, 98, 104
5000
8 - Basic: Affect* with no constraint
constant c;
Select c such that Affects*(81, 93)
4, 12, 40, 2303, 13403, 5, 23, 48, 9000, 30, 100, 9999, 14, 20, 1, 0, 10
5000
9 - Basic: Affect* with 'with'
assign a;
Select a such that Affects*(a, 86) with a.stmt#=90
90
5000
10 - Basic: Next*
stmt s,s1;
Select s such that Next*(s, s1)
24, 107, 93, 91, 88, 40, 83, 82, 71, 60, 70, 66, 98, 39, 4, 54, 23, 52, 104, 73, 102, 92, 15, 8, 35, 97, 45, 31, 48, 108, 63, 5, 12, 33, 6, 34, 14, 64, 49, 80, 42, 25, 2, 74, 13, 99, 29, 79, 56, 101, 100, 72, 9, 85, 22, 20, 86, 55, 3, 62, 87, 58, 30, 84, 89, 69, 95, 19, 81, 103, 38, 53, 77, 26, 21, 105, 90, 11, 47, 43, 96, 94, 36, 76, 1, 44, 27, 10, 65, 7, 46, 37, 17, 28, 41, 59, 67, 50, 68, 16, 106, 32, 18
5000
11 - Intermediate: Affect and Next
assign a; stmt s, s1;
Select a such that Affects(a, s1) and Next(s, s1)
4, 5, 6, 8, 9, 18, 19, 25, 26, 43, 52, 53, 54, 55, 58, 62, 63, 64, 65, 66, 70, 71, 81, 83, 86, 88, 89, 90, 91, 92, 93, 98
5000
12 - Intermediate: Affect and Next*
assign a; stmt s, s1;
Select s such that Affects(s, 44) such that Next*(s, 40)
43
5000
13 - Intermediate: return tuple Affect* and Next*
assign a;
Select <a> such that Affects*(a, 55) such that Next*(a, 59)
52, 53
5000
14 - Intermediate: Affect* and Next
stmt s;
Select s  such that Affects*(s, 86) such that Next(85, s)
86, 89
5000
15 - Intermediate: Next*  and Next with 'with'
stmt s, s1;
Select s such that Next*(s, s1) and Next(s, s1) with s1.stmt#=22
7
5000
16 - Intermediate: return tupleNext and Affect with 'with'
assign a, a1; stmt s, s1;
Select <s, a1> such that Affects(a, a1) with a.stmt#=55 such that Next(a, s)
56 57, 56 59
5000
17 - Intermediate: return tuple Affect with 'with' and Affect*
assign a, a1; call c;
Select <a1, c>  such that Affects(a, a1) with a.stmt#=70 such that Affects*(a, a1)
71 46, 71 78, 71 48, 71 41, 71 76, 71 21, 71 96, 71 13
5000
18 - Intermediate: Next and Follows
stmt s, s1; call c;
Select s  such that Next(71, s1) with s1.stmt#=68 such that Follows(s, c)
12, 20, 35, 45, 77, 95
5000
19 - Intermediate: Next and Follows*
stmt s, s1; call c;
Select s  such that Next(s1, 90) and Follows*(s, s1)
86, 87
5000
20 - Intermediate: Next and Parent
stmt s; call c; while w;
Select w  such that Next(c, s) and Parent(w, s)
28, 29
5000
21 - Intermediate: Next and Parents*
stmt s, s1; read rd;
Select s such that Next(s1, s) and Parent*(s, rd)
94, 35, 28, 14, 7, 3, 29, 10
5000
22 - Intermediate: return tuple Next* and Uses
stmt s1, s; assign a; procedure p; variable v;
Select <s1.stmt#, a.stmt#> such that Next(s1, a) and Uses(a, "p")
81 82, 82 83
5000
23 - Intermediate: Next and Calls with 'with'
print pn; call c; procedure p, p1;
Select <c.stmt#, p1.procName> such that Next(pn, c) and Calls(p, p1) with c.procName=p1.procName
21 hello, 13 nihao
5000
24 - Intermediate: Next and Calls*
assign a; read rd; procedure p, p1;
Select <rd.stmt#> such that Next(rd, a) and Calls*(p, p1)
17, 30, 97, 103
5000
25 - Intermediate: Affect and Follows
assign a; stmt s;
Select s such that Affects(a, s) and Follows(s, a)
70, 90, 91
5000
26 - Intermediate: Affect and Follows*
assign a; stmt s; print pn;
Select <pn, a> such that Affects(a, s) and Follows*(pn, a)
80 83, 16 18, 16 19, 80 81, 87 88, 23 25, 80 93, 23 26, 79 83, 24 26, 79 81, 24 25, 79 93
5000
27 - Intermediate: Affect and Parents and Uses with 'with'
assign a; stmt s; if ifs; variable v;
Select a such that Affects(a, s) and Parent(ifs, a) such that Uses(a, v) with v.varName="k"
86, 58, 4, 25
5000
28 - Intermediate: Affect and Parents* and pattern
assign a; stmt s; if ifs; variable v;
Select <ifs, a> pattern a(_, _"y+n"_) such that Affects(a, s) and Parent*(ifs, a)
3 6, 10 19, 3 19
5000
29 - Intermediate: Affect and Modifies
assign a; stmt s; if ifs; variable v;
Select a such that Affects(s, a) and Modifies(a, "n")
8, 98, 60, 6, 71, 57, 64
5000
30 - Intermediate: Affect and Calls with 'with'
assign a; stmt s; procedure p, p1; variable v;
Select p.procName such that Affects(s, a) and Calls(p, p1) with v.varName=p.procName
apakhabar, bonjour
5000
31 - Intermediate: Affect and Calls* with 'with' and pattern
assign a; stmt s, s1; procedure p, p1; variable v;
Select p.procName pattern a("z", _) such that Affects(s, a) such that Calls(p, p1) with v.varName=p.procName
none
5000
32 - Intermediate: Next and Modifies with 'with'
stmt s, s1; procedure p; variable v;
Select p such that Next(s1, s) and Modifies(p, v) with v.varName="t"
apakhabar, bonjour, hello, koniciwa
5000
33 - Advance: Next* and Uses and Affect and Parents and pattern
stmt s; procedure p, p1; variable v; while w; assign a, a1;print pn; if ifs;
Select v such that Next*(s, a) and Uses(p, v) pattern w(v,_) with v.varName=pn.varName such that Calls(p, p1) and Parent(w, ifs) and Affects(a, a1) and Parent*(s, a)
a, k, b, i
5000
34 - Advance: tuple with Next, Follows, Next*, 2 pattern, Calls and with
stmt s; assign a; call c; if ifs; variable v;procedure p, p1;
Select <a, s, c ,c.procName, ifs, v, p> such that Next(a, s) and Follows*(s, c) and Next*(ifs, c) pattern a(v,_) and ifs(v,_,_) such that Calls*(p, p1) with p1.procName=c.procName
31 32 41 apakhabar 42 k bonjour, 31 32 41 apakhabar 42 k koniciwa
5000
35 - Advance: Next and Modifies with 'with'
stmt s; assign a; call c, c1; if ifs; variable v; procedure p, p1;
Select <s, a> such that Next*(c1, a) and Next*(a, c) and Calls(p, p1) and Affects*(a, s) and Next*(s, a)
44 43, 9 19, 9 8, 9 9, 9 18, 19 18, 8 19, 8 8, 8 18
5000
36 - Advance: All Affect
assign a, a1, a2, a3, a4;
Select <a, a4> such that Affects(a, a1) and Affects(a1, a2) and Affects(a2, a3) and Affects(a3, a4) and Affects(a4, a) such that Affects(a2, a)
8 8, 91 88, 91 89, 89 92, 92 91, 86 90, 86 91, 91 91, 9 9, 91 92
5000
37 - Advance: All Next
stmt s, s1, s2, s3, s4;
Select s such that Next(s, s1) and Next(s1, s2) such that Next(s2, s3) and Next(s3, s1) and Next(s4, s3)
38, 13, 10, 12, 39, 40, 11, 37
5000
38 - Advance: Affect and Next
assign a, a1, a2, a3, a4;
Select a such that Next(a3, a1) and Next*(a, a1) such that Affects(a3, a2) and Next(a1, a2) such that Next*(a2, a3) and Affects(a1, a) and Next*(a4, a3)
86
5000
39 - Advance: Having related entity at the end
assign a, a1, a2, a3, a4, a5, a6, a7, a8;
Select a such that Next(a1, a2) and Next*(a3, a4) such that Next*(a5, a6) and Affects(a1, a) and Affects*(a4, a3)
70, 19, 6, 55, 8, 66, 65, 26, 39, 9, 64, 60, 69, 44, 53, 82, 89, 71, 83, 95, 93, 98, 67, 86, 90, 91, 92
5000
40 - Intermediate: A lot of Next* and Affect with call, read and print entity
assign a, a1, a2, a3, a4, a5, a6, a7, a8; call c; read rd; print pn;
Select <pn, c.procName, rd.varName> such that Next(c, a2) and Next*(a3, rd) and Next(a7, a8) such that Next*(c, a6) and Next(pn, a7) and Affects(a1, a) and Affects*(a4, a3)
80 nihao t, 80 nihao apakhabar, 80 nihao i, 87 nihao b, 80 nihao o, 87 nihao o, 24 nihao i, 24 nihao k, 24 nihao y, 24 nihao n, 80 nihao n, 24 nihao apakhabar, 24 nihao b, 80 nihao k, 24 nihao o, 24 nihao t, 87 nihao i, 87 nihao y, 80 nihao b, 80 nihao y, 87 nihao apakhabar, 87 nihao t, 87 nihao k, 87 nihao n
5000
41 -  Advance: Next, Parent, Parents*, pattern and Uses with 'with'
print pn; if ifs; while w; read rd; stmt s; assign a; variable v;
Select a pattern w(v,_) such that Next(pn, s) and Parent*(w, ifs) pattern ifs(v,_,_) such that Parent*(w, s) and Uses(a, v) with v.varName="a"
88, 83, 86
5000
42 - Invalid Queries
print pn; if ifs; while a; read rd; stmt s; assign a; variable v;
Select a pattern w(v,_) such that Next(pn, s) and Parent*(w, ifs) pattern ifs(v,_,_) such that Parent*(w, s) and Uses(a, v) with v.varName="a"
SemanticError
5000
43 - Invalid Next Queries
stmt s, s1, s2;
Select s1 such that Next(s, s1) and Next(s1, s) and Next(s, s2) and Next(s2, s) and Next(s2, s1) and Next(s1, s2)
none
5000
44 - Invalid Affects Queries
stmt s, s1, s2;print pn;
Select s1 such that Affects(pn, s1) and Affects(s2, s1)
none
5000

