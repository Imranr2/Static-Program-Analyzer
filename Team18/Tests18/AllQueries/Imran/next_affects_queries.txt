1 - syn, syn - ModifiesP
procedure p; variable v;
Select p such that Modifies(p, v)
bake,burnCake,burnCakeAgain,eat,gatherIngredients,heatUp,makeCake,mix,putInOven
5000
2 - syn, varName
procedure p;
Select p such that Modifies(p, "cake")
bake,burnCake,eat,makeCake,mix,putInOven
5000
3 - syn, wildcard 
procedure p;
Select p such that Modifies(p, _)
bake,burnCake,burnCakeAgain,eat,gatherIngredients,heatUp,makeCake,mix,putInOven
5000
4 - syn callStmt, syn
call c; variable v;
Select c such that Modifies(c, v)
1,2,41,53,54,64,66
5000
5 - syn callStmt, varName
call c;
Select c such that Modifies(c, "cake")
2,41,54,64
5000
6 - syn callStmt, wildcard
call c;
Select c such that Modifies(c, _)
1,2,41,53,54,64,66
5000
7 - procName, syn
variable v;
Select v such that Modifies("putInOven", v)
burntCake,cake,desiredTemperature,dough,elapsed,minimumTimer,temperature,timer
5000
8 - boolean, procName, varName

Select BOOLEAN such that Modifies("mix", "dough")
TRUE
5000
9 - boolean, procName, wildcard

Select BOOLEAN such that Modifies("mix", _)
TRUE
5000
10 - lineNum, syn
variable v;
Select v such that Modifies(2, v)
burntCake,cake,desiredTemperature,dough,egg,elapsed,flour,milk,minimumTimer,sugar,temperature,timer
5000
11 - boolean, lineNum, varName

Select BOOLEAN such that Modifies(1, "timer")
FALSE
5000
12 - boolean, lineNum, wildcard

Select BOOLEAN such that Modifies(1, _)
TRUE
5000
13 - tuple, syn syn
procedure p; variable v;
Select <p, v> such that Modifies(p, v)
bake burntCake,bake cake,bake dough,burnCake burntCake,burnCake cake,burnCakeAgain burntCake,eat cake,eat exercise,eat fat,eat goSleep,gatherIngredients bowl,gatherIngredients egg,gatherIngredients flour,gatherIngredients milk,gatherIngredients sugar,heatUp temperature,makeCake angry,makeCake bowl,makeCake burntCake,makeCake cake,makeCake cry,makeCake desiredTemperature,makeCake dough,makeCake egg,makeCake elapsed,makeCake flour,makeCake happy,makeCake invalidCake,makeCake milk,makeCake minimumTimer,makeCake sad,makeCake sugar,makeCake temperature,makeCake timer,mix burntCake,mix cake,mix desiredTemperature,mix dough,mix egg,mix elapsed,mix flour,mix milk,mix minimumTimer,mix sugar,mix temperature,mix timer,putInOven burntCake,putInOven cake,putInOven desiredTemperature,putInOven dough,putInOven elapsed,putInOven minimumTimer,putInOven temperature,putInOven timer
5000
14 - multiple modifies
procedure p;
Select p such that Modifies(p, "cake") and Modifies(p, "dough")
bake,makeCake,mix,putInOven
5000
15 - tuple, multiple relationship
procedure p; variable v; read r;
Select <p, v> such that Modifies(p, v) and Modifies(r, v)
gatherIngredients egg,gatherIngredients flour,gatherIngredients milk,gatherIngredients sugar,heatUp temperature,makeCake egg,makeCake flour,makeCake milk,makeCake sugar,makeCake temperature,makeCake timer,mix egg,mix flour,mix milk,mix sugar,mix temperature,mix timer,putInOven temperature,putInOven timer
5000
16 - syn, syn
procedure p; variable v;
Select p such that Uses(p, v)
bake,burnCake,burnCakeAgain,eat,gatherIngredients,heatUp,makeCake,mix,putInOven
5000
17 - syn, varName
procedure p;
Select p such that Uses(p, "cake")
bake,burnCake,eat,makeCake,mix,putInOven
5000
18 - syn, wildcard
procedure p;
Select p such that Uses(p, _)
bake,burnCake,burnCakeAgain,eat,gatherIngredients,heatUp,makeCake,mix,putInOven
5000
19 - syn callStmt, syn
call c; variable v;
Select c such that Uses(c, v)
1,2,41,53,54,64,66
5000
20 - syn callStmt, varName
call c;
Select c such that Uses(c, "cake")
2,41,54,64
5000
21 - syn callStmt, wildcard
call c;
Select c such that Uses(c, _)
1,2,41,53,54,64,66
5000
22 - procName, syn
variable v;
Select v such that Uses("putInOven", v)
burntCake,cake,desiredTemperature,dough,elapsed,minimumTimer,temperature,timer
5000
23 - boolean, procName, varName

Select BOOLEAN such that Uses("mix", "dough")
TRUE
5000
24 - boolean, procName, wildcard

Select BOOLEAN such that Uses("mix", _)
TRUE
5000
25 - lineNum, syn
variable v;
Select v such that Uses(2, v)
burntCake,cake,desiredTemperature,dough,egg,elapsed,flour,milk,minimumTimer,sugar,temperature,timer,tooSweet
5000
26 - lineNum, varName

Select BOOLEAN such that Uses(1, "timer")
FALSE
5000
27 - lineNum, wildcard

Select BOOLEAN such that Uses(1, _)
TRUE
5000
28 - tuple
procedure p; variable v;
Select <p, v> such that Uses(p, v)
bake burntCake,bake cake,bake dough,burnCake burntCake,burnCake cake,burnCakeAgain burntCake,eat cake,eat fat,gatherIngredients egg,gatherIngredients flour,gatherIngredients milk,heatUp desiredTemperature,heatUp elapsed,heatUp temperature,makeCake burntCake,makeCake cake,makeCake desiredTemperature,makeCake dough,makeCake egg,makeCake elapsed,makeCake flour,makeCake invalidCake,makeCake milk,makeCake minimumTimer,makeCake sad,makeCake sugar,makeCake temperature,makeCake timer,makeCake tooSweet,makeCake true,mix burntCake,mix cake,mix desiredTemperature,mix dough,mix egg,mix elapsed,mix flour,mix milk,mix minimumTimer,mix sugar,mix temperature,mix timer,mix tooSweet,putInOven burntCake,putInOven cake,putInOven desiredTemperature,putInOven dough,putInOven elapsed,putInOven minimumTimer,putInOven temperature,putInOven timer
5000
29 - Modifies, Uses
procedure p;
Select p such that Modifies(p, "cake") and Uses(p, "dough")
bake,makeCake,mix,putInOven
5000
30 - tuple, multiple uses
procedure p; variable v; print pr;
Select <p, v> such that Uses(p, v) and Uses(pr, v)
bake cake,bake dough,burnCake cake,eat cake,eat fat,heatUp elapsed,makeCake cake,makeCake dough,makeCake elapsed,makeCake invalidCake,makeCake tooSweet,mix cake,mix dough,mix elapsed,mix tooSweet,putInOven cake,putInOven dough,putInOven elapsed
5000
31 - attrRef, string
variable v;
Select v with v.varName = "cake"
cake
5000
32 - tuple, attrRef varName, attrRef procName
variable v; procedure p;
Select <v, p> with v.varName = p.procName
none
5000
33 - tuple, attrRef stmt#, attrRef value
stmt s; constant const;
Select <s, const> with s.stmt# = const.value
1 1,2 2,23 23,3 3,32 32,4 4,5 5,50 50,60 60,7 7,9 9
5000
34 - attrRef stmt#, integer
stmt s;
Select s with s.stmt# = 4
4
5000
35 - attrRef stmt#, syn
stmt s1, s2;
Select s1 with s1.stmt# = s2.stmt#
1,10,11,12,13,14,15,16,17,18,19,2,20,21,22,23,24,25,26,27,28,29,3,30,31,32,33,34,35,36,37,38,39,4,40,41,42,43,44,45,46,47,48,49,5,50,51,52,53,54,55,56,57,58,59,6,60,61,62,63,64,65,66,67,68,69,7,70,71,72,73,74,75,8,9
5000
36 - tuple, syn, syn
stmt s1, s2;
Select <s1, s2> with s1.stmt# = s2.stmt#
1 1,10 10,11 11,12 12,13 13,14 14,15 15,16 16,17 17,18 18,19 19,2 2,20 20,21 21,22 22,23 23,24 24,25 25,26 26,27 27,28 28,29 29,3 3,30 30,31 31,32 32,33 33,34 34,35 35,36 36,37 37,38 38,39 39,4 4,40 40,41 41,42 42,43 43,44 44,45 45,46 46,47 47,48 48,49 49,5 5,50 50,51 51,52 52,53 53,54 54,55 55,56 56,57 57,58 58,59 59,6 6,60 60,61 61,62 62,63 63,64 64,65 65,66 66,67 67,68 68,69 69,7 7,70 70,71 71,72 72,73 73,74 74,75 75,8 8,9 9
5000
37 - syn, int
stmt n;
Select n with n.stmt# = 7
7
5000
38 - boolean, string, string true

Select BOOLEAN with "rambo" = "rambo"
TRUE
5000
39 - boolean, string, string false

Select BOOLEAN with "rambo" = "misha"
FALSE
5000
40 - boolean, integer, integer true

Select BOOLEAN with 42 = 42
TRUE
5000
41 - Literal, literal

Select BOOLEAN such that Calls("makeCake", "putInOven")
FALSE
5000
42 - Literal, syn
procedure p;
Select p such that Calls("putInOven", p)
heatUp, bake
5000
43 - Literal, wildcard
procedure p;
Select p such that Calls("burnCake", _)
makeCake, gatherIngredients, mix, putInOven, heatUp, bake, burnCake, burnCakeAgain, eat
5000
44 - syn, literal
procedure p;
Select p such that Calls(p, "putInOven")
mix
5000
45 - syn, syn
procedure p, p1;
Select <p, p1> such that Calls(p1, p)
gatherIngredients makeCake, mix makeCake, putInOven mix, heatUp putInOven, bake putInOven, burnCake bake, burnCakeAgain burnCake
5000
46 - syn, wildcard
procedure p;
Select p such that Calls(p, _)
makeCake, mix, putInOven, bake, burnCake
5000
47 - wildcard, literal
assign a;
Select a such that Calls(_, "eat")
none
5000
48 - wildcard, syn
procedure p;
Select p such that Calls(_, p)
gatherIngredients, mix, putInOven, bake, heatUp, burnCake, burnCakeAgain
5000
49 - wildcard, wildcard
procedure p;
Select p such that Calls(_, _)
makeCake, gatherIngredients, mix, putInOven, bake, heatUp, burnCake, burnCakeAgain, eat
5000
50 - Literal, literal

Select BOOLEAN such that Calls*("makeCake", "putInOven")
TRUE
5000
51 - Literal, syn
procedure p;
Select p such that Calls*("putInOven", p)
heatUp, bake, burnCake, burnCakeAgain
5000
52 - Literal, wildcard
procedure p;
Select p such that Calls*("gatherIngredients", _)
none
5000
53 - syn, literal
procedure p;
Select p such that Calls*(p, "bake")
makeCake, mix, putInOven
5000
54 - syn, syn
procedure p, p1;
Select p1 such that Calls*(p, p1)
gatherIngredients, mix, heatUp, putInOven, bake, burnCake, burnCakeAgain
5000
55 - syn, wildcard
procedure p;
Select p such that Calls*(p, _)
makeCake, mix, putInOven, bake, burnCake
5000
56 - wildcard, literal

Select BOOLEAN such that Calls*(_, "eat")
FALSE
5000
57 - wildcard, syn
procedure p;
Select p such that Calls*(_, p)
gatherIngredients, mix, putInOven, heatUp, bake, burnCake, burnCakeAgain
5000
58 - wildcard, wildcard
if ifs;
Select ifs such that Calls*(_,_)
4, 7, 8, 26, 44, 52, 58, 61, 73
5000
59 - boolean, num, num, simple positive

Select BOOLEAN such that Next(14, 15)
TRUE
5000
60 - boolean, num, num, simple negative

Select BOOLEAN such that Next(12, 19)
FALSE
5000
61 - boolean, num, num, simple negative

Select BOOLEAN such that Next(7, 6)
FALSE
5000
62 -  boolean, num, num, enter if

Select BOOLEAN such that Next(4, 5)
TRUE
5000
63 - boolean, num, num, Enter while

Select BOOLEAN such that Next(51, 52)
TRUE
5000
64 -  boolean, num, num, Then and else

Select BOOLEAN such that Next(53, 54)
FALSE
5000
65 - boolean, num, num, Loop from end of while block back to while stmt

Select BOOLEAN such that Next(31, 25)
FALSE
5000
66 - boolean, num, num, While back to itself

Select BOOLEAN such that Next(23, 23)
FALSE
5000
67 - boolean, num, num, Exit if, multiple next

Select BOOLEAN such that Next(46, 47) and Next(45, 47)
TRUE
5000
68 - boolean, num, num, Exit while negative

Select BOOLEAN such that Next(35, 36)
FALSE
5000
69 - boolean, num, num, Exit while positive

Select BOOLEAN such that Next(22, 36)
TRUE
5000
70 - boolean, num, num, Different procedure

Select BOOLEAN such that Next(48, 60)
FALSE
5000
71 - boolean, num, num, Call stmt

Select BOOLEAN such that Next(41, 42)
FALSE
5000
72 - boolean, num, wildcard

Select BOOLEAN such that Next(18, _)
TRUE
5000
73 - boolean, num, wildcard

Select BOOLEAN such that Next(21, _)
FALSE
5000
74 - boolean, num, wildcard, Enter if

Select BOOLEAN such that Next(4, _)
TRUE
5000
75 - boolean, num, wildcard, Enter while

Select BOOLEAN such that Next(51, _)
TRUE
5000
76 - boolean, num, wildcard, Loop from end back to stmt

Select BOOLEAN such that Next(57, _)
TRUE
5000
77 - boolean, num, wildcard

Select BOOLEAN such that Next(66, _)
FALSE
5000
78 - num, stmt syn, Simple positive, call stmt
stmt s;
Select s such that Next(3, s)
4
5000
79 - num, stmt syn
stmt s;
Select s such that Next(21, s)
none
5000
80 - num, stmt syn, Enter if
stmt s;
Select s such that Next(4, s)
5, 12
5000
81 - num, stmt syn, Enter while
stmt s;
Select s such that Next(51, s)
52
5000
82 - num, stmt syn, Then and else
stmt s;
Select s such that Next(59, s)
none
5000
83 - num, stmt syn, Loop from end of while block back to while stmt
stmt s;
Select s such that Next(31, s)
24
5000
84 - num, stmt syn, Exit if
stmt s;
Select s such that Next(46, s) and Next(45, s)
47
5000
85 - num, stmt syn, Exit while
stmt s;
Select s such that Next(22, s)
23, 36
5000
86 - num, stmt syn, Call stmt
stmt s;
Select s such that Next(41, s)
none
5000
87 - stmt syn, num, Simple positive
stmt s;
Select s such that Next(s, 2)
1
5000
88 - stmt syn, num, Simple negative
stmt s;
Select s such that Next(s, 1)
none
5000
89 - stmt syn, num, Enter if
stmt s;
Select s such that Next(s, 5)
4
5000
90 - stmt syn, num, Enter while
stmt s;
Select s such that Next(s, 52)
51
5000
91 - stmt syn, num, If and else
stmt s;
Select s such that Next(s, 54)
52
5000
92 - stmt syn, num, Loop from end of while block back to while stmt
stmt s;
Select s such that Next(s, 25)
24, 27, 29
5000
93 - stmt syn, num, Exit if
stmt s;
Select s such that Next(s, 47)
45, 46
5000
94 - stmt syn, num, Exit while
stmt s;
Select s such that Next(s, 36)
22
5000
95 - Call stmt
stmt s;
Select s such that Next(s, 42)
none
5000
96 - stmt syn, wildcard
stmt s;
Select s such that Next(s, _)
1,13,14,15,16,17,18,19,2,20,22,23,24,25,26,27,28,29,3,30,31,32,33,34,35,36,37,38,39,4,40,42,43,44,45,46,47,48,49,5,50,51,52,53,54,55,56,57,58,6,61,62,65,68,69,7,70,71,72,73,8
5000
97 - wildcard, assign syn
assign a;
Select a such that Next(_, a)
10,11,12,14,16,18,20,21,28,29,30,31,32,33,34,35,37,38,39,40,43,45,46,47,49,5,50,55,59,60,62,63,69,70,74,75,9
5000
98 - if syn, wildcard
if ifs;
Select ifs such that Next(ifs, _)
26,4,44,52,58,61,7,73,8
5000
99 - wildcard, while syn
while w;
Select w such that Next(_, w)
22,23,24,25,51,68
5000
100 - call syn, wildcard
call c;
Select c such that Next(c, _)
1,2,53,54
5000
101- read syn, wildcard
read r;
Select r such that Next(r, _)
13,15,17,19,42,48
5000
102 - wildcard, print syn
print p;
Select p such that Next(_, p)
27,3,36,56,57,6,71,72
5000
103 - 2 assign
assign a, a1;
Select a such that Next(a, a1)
20, 28, 30, 32, 34, 37, 38, 39, 45, 46, 49, 62, 69
5000
104 - call and stmt
call c; stmt s;
Select s such that Next(c, s)
2, 3, 55
5000
105 - if and stmt
if ifs; stmt s;
Select ifs such that Next(ifs, s)
26,4,44,52,58,61,7,73,8
5000
106 - while and if
if ifs; while w;
Select ifs such that Next(w, ifs)
26,52
5000
107 - if and while
if ifs; while w;
Select w such that Next(ifs, w)
none
5000
108 - while and assign
while w; assign a;
Select a such that Next(w, a)
30,32,34,69
5000
109 - assign and while
while w; assign a;
Select w such that Next(a, w)
22,23,24,25,51
5000
110 - Simple positive

Select BOOLEAN such that Next(_, 15)
TRUE
5000
111 - Simple negative

Select BOOLEAN such that Next(_, 1)
FALSE
5000
112 - Enter if

Select BOOLEAN such that Next(_, 5)
TRUE
5000
113 - Enter while

Select BOOLEAN such that Next(_, 52)
TRUE
5000
114 - If and else

Select BOOLEAN such that Next(_, 60)
TRUE
5000
115 - Loop from end of while block back to while stmt

Select BOOLEAN such that Next(_, 22)
TRUE
5000
116 - Exit if

Select BOOLEAN such that Next(_, 47)
TRUE
5000
117 - Exit while positive

Select BOOLEAN such that Next(_, 36)
TRUE
5000
118 - Call stmt

Select BOOLEAN such that Next(_, 42)
FALSE
5000
119 - wildcard+syn s
stmt s;
Select s such that Next(_, s)
10,11,12,14,15,16,17,18,19,2,20,21,22,23,24,25,26,27,28,29,3,30,31,32,33,34,35,36,37,38,39,4,40,41,43,44,45,46,47,48,49,5,50,51,52,53,54,55,56,57,59,6,60,62,63,64,66,68,69,7,70,71,72,73,74,75,8,9
5000
120 - wildcard+syn a
assign a;
Select a such that Next(_, a)
10,11,12,14,16,18,20,21,28,29,30,31,32,33,34,35,37,38,39,40,43,45,46,47,49,5,50,55,59,60,62,63,69,70,74,75,9
5000
121 - wildcard+syn if
if ifs;
Select ifs such that Next(_, ifs)
26,4,44,52,7,73,8
5000
122 - wildcard+syn w
while w;
Select w such that Next(_, w)
22,23,24,25,51,68
5000
123 - wildcard+syn c
call c;
Select c such that Next(_, c)
2,41,53,54,64,66
5000
124 -wildcard+syn r
read r;
Select r such that Next(_, r)
15,17,19,48
5000
125 - wildcard+syn p
print p;
Select p such that Next(_, p)
27,3,36,56,57,6,71,72
5000
126 - wildcard+wildcard

Select BOOLEAN such that Next(_, _)
TRUE
5000
127 - Simple positive

Select BOOLEAN such that Next*(14, 15)
TRUE
5000
128 - Simple positive 2

Select BOOLEAN such that Next*(12, 19)
FALSE
5000
129 - Simple negative 

Select BOOLEAN such that Next*(7, 6)
FALSE
5000
130 - Enter if

Select BOOLEAN such that Next*(4, 6)
TRUE
5000
131 - Enter while

Select BOOLEAN such that Next*(51, 56)
TRUE
5000
132 - Then and else

Select BOOLEAN such that Next*(45, 46)
FALSE
5000
133 - Loop from end of while block back to while stmt

Select BOOLEAN such that Next*(31, 25)
TRUE
5000
134 - While back to itself

Select BOOLEAN such that Next*(23, 23)
TRUE
5000
135 - Exit if

Select BOOLEAN such that Next*(46, 47) and Next*(45, 47)
TRUE
5000
136 - Exit while

Select BOOLEAN such that Next*(35, 36)
TRUE
5000
137 - Exit while 2

Select BOOLEAN such that Next*(22, 36)
TRUE
5000
138 - Different procedure

Select BOOLEAN such that Next*(48, 60)
FALSE
5000
139 - Call stmt

Select BOOLEAN such that Next*(41, 42)
FALSE
5000
140 - Simple positive

Select BOOLEAN such that Next*(18, _)
TRUE
5000
141 - Simple negative

Select BOOLEAN such that Next*(21, _)
FALSE
5000
142 - Enter if

Select BOOLEAN such that Next*(4, _)
TRUE
5000
143 - Enter while

Select BOOLEAN such that Next*(51, _)
TRUE
5000
144 - Loop from end back to stmt

Select BOOLEAN such that Next*(57, _)
TRUE
5000
145 - Call stmt

Select BOOLEAN such that Next*(66, _)
FALSE
5000
146 - Simple positive
stmt s;
Select s such that Next*(3, s)
10,11,12,5,6,7,8,9,4
5000
147 - Simple negative
stmt s;
Select s such that Next*(21, s)
none
5000
148 - Enter if
stmt s;
Select s such that Next*(4, s)
10,11,12,6,7,8,9,5
5000
149 - Enter while
stmt s;
Select s such that Next*(51, s)
51,53,54,55,56,57,52
5000
150 - Then and else
stmt s;
Select s such that Next*(59, s)
none
5000
151 - Loop from end of while block back to while stmt
stmt s;
Select s such that Next*(31, s)
24,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41
5000
152 - Exit if
stmt s;
Select s such that Next*(46, s) and Next*(45, s)
47,48,49,50,51,52,53,54,55,56,57
5000
153 - Exit while
stmt s;
Select s such that Next*(22, s)
23,36,22,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41
5000
154 - Call stmt
stmt s;
Select s such that Next*(41, s)
none
5000
155 - Simple positive
stmt s;
Select s such that Next*(s, 2)
1
5000
156 - Simple negative
stmt s;
Select s such that Next*(s, 1)
none
5000
157 - Enter if
stmt s;
Select s such that Next*(s, 5)
1,2,3,4
5000
158 - Enter while
stmt s;
Select s such that Next*(s, 52)
51,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57
5000
159 - If and else
stmt s;
Select s such that Next*(s, 54)
52,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57
5000
160 - Loop from end of while block back to while stmt
stmt s;
Select s such that Next*(s, 25)
24,27,29,22,23,25,26,28,30,31,32,33,34,35
5000
161 - Exit if
stmt s;
Select s such that Next*(s, 47)
45,46,42,43,44
5000
162 - Exit while
stmt s;
Select s such that Next*(s, 36)
22,23,24,25,26,27,28,29,30,31,32,33,34,35
5000
163 - Call stmt
stmt s;
Select s such that Next*(s, 42)
none
5000
164 - stmt
stmt s;
Select s such that Next*(s, _)
1,13,14,15,16,17,18,19,2,20,22,23,24,25,26,27,28,29,3,30,31,32,33,34,35,36,37,38,39,4,40,42,43,44,45,46,47,48,49,5,50,51,52,53,54,55,56,57,58,6,61,62,65,68,69,7,70,71,72,73,8
5000
165 - assign
assign a;
Select a such that Next*(a, _)
14,16,18,20,28,29,30,31,32,33,34,35,37,38,39,40,43,45,46,47,49,5,50,55,62,65,69,70
5000
166 - if
if ifs;
Select ifs such that Next*(ifs, _)
26,4,44,52,58,61,7,73,8
5000
167 - while
while w;
Select w such that Next*(w, _)
22,23,24,25,51,68
5000
168 - call
call c;
Select c such that Next*(c, _)
1,2,53,54
5000
169 - read
read r;
Select r such that Next*(r, _)
13,15,17,19,42,48
5000
170 - print
print p;
Select p such that Next*(p, _)
27,3,36,56,57,6,71,72
5000
171 - assign+assign
assign a, a1;
Select a such that Next*(a, a1)
20, 28, 30, 32, 34, 37, 38, 39, 45, 46, 49, 62, 69,14,16,18,29,31,33,35,43,47,5,50,55,70
5000
172 - call + stmt
call c; stmt s;
Select s such that Next*(c, s)
2, 3, 55,10,11,12,4,5,51,52,53,54,56,57,6,7,8,9
5000
173 - if + stmt
if ifs; stmt s;
Select ifs such that Next*(ifs, s)
26,4,44,52,58,61,7,73,8
5000
174 - while + if
if ifs; while w;
Select ifs such that Next*(w, ifs)
26,52,73
5000
175 - if + while
if ifs; while w;
Select w such that Next*(ifs, w)
22,23,24,25,51
5000
176 - while + assign
while w; assign a;
Select a such that Next*(w, a)
28,29,30,31,32,33,34,35,37,38,39,40,55,69,70,74,75
5000
177 - assign + while
while w; assign a;
Select w such that Next*(a, w)
22,23,24,25,51,68
5000
178 - wildcard + number, positive

Select BOOLEAN such that Next*(_, 15)
TRUE
5000
179 - wildcard + number, negative

Select BOOLEAN such that Next*(_, 1)
FALSE
5000
180 - wildcard + number, enter if

Select BOOLEAN such that Next*(_, 5)
TRUE
5000
181 - wildcard + number, enter while

Select BOOLEAN such that Next*(_, 52)
TRUE
5000
182 - wildcard + number, if and else

Select BOOLEAN such that Next*(_, 60)
TRUE
5000
183 - wildcard + number, loop from end of while block back to while stmt

Select BOOLEAN such that Next*(_, 22)
TRUE
5000
184 - wildcard + number, exit if

Select BOOLEAN such that Next*(_, 47)
TRUE
5000
185 - wildcard + number, exit while positive

Select BOOLEAN such that Next*(_, 36)
TRUE
5000
186 - wildcard + number, call stmt

Select BOOLEAN such that Next*(_, 42)
FALSE
5000
187 - wildcard + stmt
stmt s;
Select s such that Next*(_, s)
10,11,12,14,15,16,17,18,19,2,20,21,22,23,24,25,26,27,28,29,3,30,31,32,33,34,35,36,37,38,39,4,40,41,43,44,45,46,47,48,49,5,50,51,52,53,54,55,56,57,59,6,60,62,63,64,66,68,69,7,70,71,72,73,74,75,8,9
5000
188 - wildcard + assign
assign a;
Select a such that Next*(_, a)
10,11,12,14,16,18,20,21,28,29,30,31,32,33,34,35,37,38,39,40,43,45,46,47,49,5,50,55,59,60,62,63,69,70,74,75,9
5000
189 - wildcard + if
if ifs;
Select ifs such that Next*(_, ifs)
26,4,44,52,7,73,8
5000
190 - wildcard + while
while w;
Select w such that Next*(_, w)
22,23,24,25,51,68
5000
191 - wildcard + call
call c;
Select c such that Next*(_, c)
2,41,53,54,64,66
5000
192 - wildcard + read
read r;
Select r such that Next*(_, r)
15,17,19,48
5000
193 - wildcard + print
print p;
Select p such that Next*(_, p)
27,3,36,56,57,6,71,72
5000
194 - wildcard + wildcard

Select BOOLEAN such that Next*(_, _)
TRUE
5000