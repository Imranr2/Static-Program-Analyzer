procedure main {
      while ( x == 0 ) {
       while ( x == y ) {
                   x = 0;
                   while ( x == z ) {
                        while ( x == x ) {
                               if ( y == x ) then {
                                     y = x + 1;
                                     z = x * 1 + 1;
                                     while ( (x == z) && (y == x)) {
                                            y = 1 * x + 1;
                                            if ( (z == x) || (z == y) )  then {
                                                   if ( z == 0 ) then {
                                                           if ( (x == 1) && (y == 1) ) then {
                                                                    while ( ! ( x + 1 == 2) ) {
                                                                          z = x;
                               call second;
                                                                      }    
                                                              } else {
                         call third;
                         x = y;
                         x = 1 * y; 
                        }
                                                       } else {
                       y = 2;
                         }
                                                } else {
                         y = 0;
                  }
                                          }
                                    } else {
                print z;
             }
                            }
                      } 
                    x = y;
                    y = x + 1;
                    z = y * x + 1;
              }
        }
}




procedure second {
        read x;
       while (3 > 2) {
            if (2 > 0 + 1) then {
                  x = 10;
                  while ((x == y) || (1 <= 2)) {
                         x = 11;
                         x = 1;
                      }
               } else { 
                   if (x + z + a + y < 1) then {
                         while (0 != 0) {
                                while ((x == 3) || (!(x + 3 < 3))) {
                                      while (10 == 10) {
                                             x = 1;
                                         }
                                  }
                                while (x - 1 > 3) {
                                       x  = 2;
                    call sixth;
                                   }
                                 x = 1;
                             }
                      } else {
                           x = 1;
                     }
                   x = 1;
              }
          }
       if (!(y + 2 < z)) then {
              x = 1;
         } else {
              x = 1;
         }
}

procedure third {
    print m;
    read n;
    if (k == l) then {
        m = n + ym - h;
        m = 2;
        print xy;
        jo = dan;
    } else {
        thank = you;
        you = are + welcome;
        read myFace;
        print er;
    }
}

procedure fourth {
    while (p <= q) {
        if (g != h) then {
            print p;
            read g;
            call fifth;
            read i;
        } else {
            j = k + l;
            call sixth;
        }
        while (u == q) {
            j = j - 1 + q;
            q = u * j - i;
            print m;
        }
    }
}

procedure fifth {
    print a;
    if (a == b) then {
        while (b != c) {
            print pear;
            read apple;
        }
    } else {
        print grapes;
        while (pomegranate != sweet) {
            do = not + eat;
            while (friday != monday) {
                read calendar;
            }
        query = tiring;
        }
    }

}

procedure sixth {
    while (x == 1) {
        while (x == 2) {
            while (x == 3) {
                pizza = delivery;
            }
        }
    }
    if (mmtf != logical) then {
        get = out;
    } else {
        vote = incumbent;
    }
    read visa;
    print airTicket;
}
